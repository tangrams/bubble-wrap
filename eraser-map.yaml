Author: Geraldine Sarmiento, Nathaniel V. Kelso, Patricio Gonzalez Vivo, Brett Camper, Peter Richardson

labels-global:
    - &text_visible_continent         true
    - &text_visible_admin             true
    - &text_visible_populated_places  true
    - &text_visible_neighbourhoods    true
    - &text_visible_neighbourhoods_e  true
    - &text_visible_water_labels      true
    - &label_visible_landuse_green    true
    - &icon_visible_landuse_green     true
    - &text_visible_landuse_green     true
    - &label_visible_poi_landuse      true
    - &icon_visible_poi_landuse       true
    - &text_visible_poi_landuse       true
    - &label_visible_poi_landuse_e    true
    - &icon_visible_poi_landuse_e     true
    - &text_visible_poi_landuse_e     true
    - &label_visible_station          true
    - &icon_visible_station           true
    - &text_visible_station           true
    - &text_visible_highway           true
    - &text_visible_highway_e         true
    - &text_visible_trunk_primary     true
    - &text_visible_trunk_primary_e   true
    - &text_visible_secondary         true
    - &text_visible_secondary_e       true
    - &text_visible_tertiary          true
    - &text_visible_tertiary_e        true
    - &text_visible_minor_road        true
    - &text_visible_minor_road_e      true
    - &text_visible_service_road      true
    - &text_visible_path              true
    - &text_visible_steps             false

settings:
    cameras:
        - &camera_settings            { type: isometric, axis: [0, 1] }

    lights:
        - &light_settings             { type: directional, direction: [1, 1, -.9], diffuse: 0.5, ambient: 0.85 }

    roads:
        - &highway1                   [0.988,0.495,0.439]
        - &highway_link1              [1.000,0.631,0.590]
        - &highway_casing1            [0.859,0.859,0.859]
        - &highway_tunnel1            [0.800,0.800,0.800]
        - &highway_tunnel_casing1     [0.870,0.870,0.870]
        - &highway_link_tunnel_casing1 [0.8, 0.8, 0.7]
        - &ferry1                     '#8bb5e4'
        - &rail1                      '#999'
        - &rail1_e                    '#bbb'
        - &rail2                      '#777'             # less important rail (service, sidings)
        - &major_road1                [1, 1, 1]
        - &major_road1b               [1.0,1.0,1.0]
        - &major_road1c               white    #15%
        - &major_road2                [1.0,1.0,1.0]
        - &major_road2a               [1.0,1.0,1.0]
        - &major_road2b               [1.0,1.0,1.0]
        - &major_road3                [1.0,1.0,1.0]
        - &major_road4                white
        - &major_casing1              [0.859,0.859,0.859] # same as highway_casing1
        - &major_casing2              [0.859,0.859,0.859] # zoomed out
        - &major_tunnel1              [.870,0.870,0.870]  # light orange (major_route1)
        - &major_tunnel_casing1       [0.780,0.780,0.780]
        - &major_route1               [1.000,0.631,0.590]
        - &major_route2               [1.000,0.752,0.730] # zoomed out
        - &minor_route                [1.000,0.631,0.590] # same as major_route
        - &minor_road1                [0.9,0.9,0.9]       # natural earth
        - &minor_road2                [0.9,0.9,0.9]       # natural earth, same as major_road2
        - &minor_road3                [0.9,0.9,0.9]
        - &minor_road4                [0.9,0.9,0.9]       # zoomed out
        - &minor_road5                [0.9,0.9,0.9]       # zoomed out, again
        - &minor_casing1              white               # same as highway_casing1
        - &minor_casing2              white               # zoomed out
        - &minor_tunnel1              [0.8, 0.8, 0.7]
        - &minor_tunnel_casing1       white
        - &service_road1              white
        - &service_road2              white
        - &service_road_casing1       [0.770,0.770,0.770]
        - &service_road_casing2       white
        - &path1                      [0.91,0.91,0.91]
        - &path2                      [0.91,0.91,0.91]    # zoomed out
        - &path_casing1               [0.875,0.875,0.875]
        - &path_bridge_casing1        [0.870,0.870,0.870]
        - &path_bridge_casing2        [0.870,0.870,0.870] # zoomed out
        - &path_steps1                [0.91,0.91,0.91]
        - &path_steps1_b              '#f0ebeb'

    boundaries:
        - &country_boundary           [1.0,1.0,1.0]
        - &region_boundary            [1.0,1.0,1.0]
        - &subregion_boundary         '#bbb'
        - &city_wall                  '#ccb38f'
        - &retaining_wall             [0.827,0.808,0.780]

    areas:
        - &scene1      '#eee'                   # map background, water
        - &water1      [0.83, 0.83, 0.83]       # water
        - &water2      [.75,.75,.75]            # playa
        - &water1_o    '#9dc3de'                # water stroke
        - &water2_o    '#9dc3de'                # water stroke 2
        - &earth1      '#666'                   # land color
        - &earth1_r    '#666'                   # land color road
        - &earth2      '#e9e4e0'                # urban
        - &earth2_v    false                    # urban
        - &earth2_e    '#b3b3b3'                # urban early
        - &earth2_e2   '#b3b3b3'                # urban early fade in
        - &earth2_e3   '#bbbbbb'                # urban early fade in 3
        - &earth2_ev   true                     # urban early visibility
        - &green1      [0.140,0.843,0.824]      # park
        - &green1_r    [0.140,0.843,0.824]      # roads in parks
        - &green1_b    '#94d8d6'                # buildings in parks
        - &green1_bo   '#7fc3c1'                # buildings in parks, outlines
        - &green1_w    '#b7d7bf'                # wilderness area
        - &green1_ws   '#aed0b6'                # wilderness area stroke
        - &green1b     [0.80,0.80,0.80]         # park
        - &green2      [0.547,0.760,0.590]      # cemetery
        - &green2_r    [0.7,0.7,0.7]            # cemetery road
        - &green3      [0.000,0.779,0.328]      # golf course
        - &green4      '#526054'                # farm faint
        - &green4_v    false                    # farm faint
        - &green5      '#5a695c'                # farm
        - &green6      '#648560'                # nature reserve
        - &green7      [0.169,0.651,0.631]      # forest
        - &green8      [0.123,0.770,0.587]      # conservation
        - &green9      '#cfe3d4'                # forest (landcover)
        - &green9_e    '#cfe3d4'                # forest (landcover) early
        - &green9_v    true                     # forest (landcover) visibility
        - &orange1     '#bfb08e'                # stadium
        - &orange2     '#d8ccb0'                # pitch (play field)
        - &brown1      [0.814,0.692,0.570]      # university
        - &brown1_r    [0.814,0.692,0.570]      # roads in university
        - &brown1_b    [.65, .65, .65]          # university buildings
        - &brown1_bo   [.8, .8, .8]             # university building outlines
        - &brown2      '#ada497'                # school
        - &brown3      '#c7b7a2'                # playground
        - &red1        [0.840,0.503,0.541]      # hospital
        - &red1_r      [0.840,0.503,0.541]      # roads in hospital
        - &red1_b      [.65, .65, .65]          # hospital buildings
        - &red1_bo     [.8, .8, .8]             # hospital building outlines
        - &grey1       '#717171'                # pedestrian, retail, airport apron, parking, church
        - &grey1_e     '#cac6c4'                # pedestrian, retail, airport apron, parking, church early zoom 14
        - &grey1_v     true                     # pedestrian, retail, airport apron, parking, church
        - &grey2       [0.5, 0.5, 0.5]          # airport runway
        - &grey3       grey                     # railway
        - &grey4       '#ffc52a'                # airport taxiway
        - &grey5       '#ffc52a'                # airport taxiway
        - &grey6       '#c6c6c6'                # industrial
        - &grey6_b     [.65, .65, .65]          # industrial buildings
        - &grey6_bo    [.8, .8, .8]             # industrial building outlines
        - &purple      '#f0e1e1'                # airport
        - &purple_v    false                    # airport
        - &mystry1     '#bfb08e'                # recreation ground
        - &building1   [0.784, 0.784, 0.784]    # building
        - &building2   [.860, .860, .860]          # building stroke
        - &building_o  5                        # building stroke order
        - &building_e  true                     # building stroke order

    labels:
        - &text_fill   black
        - &text_fill2        '#555'             # WHITE
        - &text_fill_building '#ccc'            # WHITE
        - &text_fill_address  '#aaa'            # HUH
        - &text_fill_water   '#4c89b5'          # blue
        - &text_fill_park    [0.35,0.35,0.35]   # black
        - &text_stroke [0.870,0.870,0.870]      # land color
        - &text_stroke_water [0.9, 0.9, 0.9]    # water stroke color
        - &text_stroke_park  '#bddec5'          # park stroke color
        - &text_stroke_building  [0.83, 0.83, 0.83] # building stroke color
        - &text_stroke_address   [0.85, 0.85, 0.85]    # address stroke color
        - &text_stroke_road1  [0.9, 0.9, 0.9]   # road stroke color highway
        - &text_stroke_road2  [0.9, 0.9, 0.9]   # road stroke color major road
        - &text_stroke_road3  [0.9, 0.9, 0.9]   # road stroke color major road route
        - &text_stroke_road4  [0.9, 0.9, 0.9]   # road stroke color minor road
        - &townspot_sprite   townspot-m-rev     # depends on land color and text settings
        - &text_font_family  'Open Sans'        # branding in asperational Unicode, yo (or Helvetica)



textures:
    pois:
        url: images/poi_icons_18@2x.png
        filtering: mipmap
        sprites:
            # define sprites: [x origin, y origin, width, height]
            adult-boutique: [802, 1116, 36, 38]
            airport: [631, 105, 36, 38]
            animal-shelter: [380, 1364, 36, 38]
            antique-shop: [1048, 861, 36, 38]
            aquarium: [630, 530, 36, 38]
            arcade: [964, 530, 36, 38]
            art-gallery: [968, 2052, 36, 38]
            arts-crafts: [1052, 948, 36, 38]
            athletics-sports: [1054, 1541, 36, 38]
            atm: [1138, 1285, 36, 38]
            automotive-shop: [630, 187, 36, 38]
            bagel-shop: [716, 1796, 36, 38]
            bakery: [461, 1964, 36, 38]
            bank: [802, 1285, 36, 38]
            bar: [634, 1713, 36, 38]
            baseball-field: [632, 1455, 36, 38]
            basketball-court: [886, 1539, 36, 38]
            basketball-stadium: [716, 1456, 36, 38]
            bathroom: [1557, 615, 36, 38]
            battlefield: [973, 696, 36, 38]
            bbq: [800, 1796, 36, 38]
            beach: [382, 531, 36, 38]
            beach-resort: [1389, 531, 36, 38]
            beer-garden: [885, 1711, 36, 38]
            bench: [719, 698, 36, 38]
            bicycle-parking: [970, 187, 36, 38]
            bike-shop: [470, 1033, 36, 38]
            boat-ferry: [716, 104, 36, 38]
            boat-ramp: [1472, 694, 36, 38]
            bookstore: [636, 1117, 36, 38]
            bowling-alley: [1222, 1541, 36, 38]
            breakfast: [968, 1796, 36, 38]
            bridal-shop: [550, 1118, 36, 38]
            bridge: [1392, 192, 36, 38]
            buddhism: [719, 275, 36, 38]
            building: [465, 693, 36, 38]
            burger: [464, 1796, 36, 38]
            bus-station: [548, 103, 36, 38]
            butcher: [1220, 1627, 36, 38]
            camera-store: [298, 945, 36, 38]
            campground: [1220, 533, 36, 38]
            candy-store: [1053, 1627, 36, 38]
            capital-l: [982, 2147, 15, 15]
            capital-m: [1067, 2149, 14, 14]
            capital-s: [1152, 2150, 12, 12]
            capital-xl: [896, 2145, 20, 20]
            capital-xs: [1237, 2151, 9, 9]
            car-dealership: [380, 187, 36, 38]
            car-wash: [545, 186, 36, 38]
            carribean-restaurant: [1050, 1876, 36, 38]
            casino: [800, 2052, 36, 38]
            castle: [1223, 616, 36, 38]
            cemetery: [632, 275, 36, 38]
            cheese-shop: [969, 1627, 36, 38]
            chinese-restaurant: [800, 1880, 36, 38]
            church: [464, 275, 36, 38]
            city: [296, 695, 36, 38]
            clinic: [462, 355, 36, 38]
            clothing-store: [718, 864, 36, 38]
            cocktail-bar: [550, 1713, 36, 38]
            coffee-shop: [300, 1965, 36, 38]
            college-university: [296, 444, 36, 38]
            comedy-club: [716, 2052, 36, 38]
            concert-hall: [382, 2052, 36, 38]
            convenience-store: [461, 1626, 36, 38]
            cosmetics-shop: [718, 1199, 36, 38]
            courthouse: [632, 18, 36, 38]
            credit-union: [882, 1286, 36, 38]
            cupcake-shop: [717, 1965, 36, 38]
            current-location: [958, 2280, 144, 146]
            daycare: [462, 444, 36, 38]
            dentist: [380, 355, 36, 38]
            department-store: [550, 863, 36, 38]
            design-studio: [632, 1284, 36, 38]
            dessert: [799, 1967, 36, 38]
            dog-run: [549, 1371, 36, 38]
            donut: [546, 1968, 36, 38]
            dry-cleaning: [802, 1199, 36, 38]
            electronics-store: [806, 945, 36, 38]
            ev-charging-station: [799, 187, 36, 38]
            factory: [1055, 693, 36, 38]
            farm: [1305, 696, 36, 38]
            farmers-market: [884, 1627, 36, 38]
            field: [885, 780, 36, 38]
            financial-service: [966, 1286, 36, 38]
            fire-station: [384, 18, 36, 38]
            fish-market: [800, 1627, 36, 38]
            fishing-spot: [1390, 611, 36, 38]
            fitness: [966, 1538, 36, 38]
            flea-market: [969, 863, 36, 38]
            flower-shop: [633, 1628, 36, 38]
            food-court: [295, 1880, 36, 38]
            food-drink-shop: [1136, 1627, 36, 38]
            football-stadium: [548, 1454, 36, 38]
            ford: [1223, 191, 36, 38]
            forest: [973, 780, 36, 38]
            fountain: [720, 615, 36, 38]
            fried-chicken-joint: [548, 1880, 36, 38]
            fun-fair: [880, 529, 36, 38]
            furniture-store: [632, 864, 36, 38]
            gaming-cafe: [1050, 532, 36, 38]
            garden: [296, 616, 36, 38]
            garden-center: [381, 1033, 36, 38]
            gas-station: [295, 188, 36, 38]
            gastropub: [632, 1880, 36, 38]
            gate: [803, 698, 36, 38]
            gay-bar: [466, 1713, 36, 38]
            general-entertainment: [632, 2052, 36, 38]
            general-travel: [464, 1284, 36, 38]
            generic: [294, 2137, 36, 38]
            german-restaurant: [464, 1880, 36, 38]
            gift-shop: [718, 1115, 36, 38]
            golf-course: [296, 1457, 36, 38]
            gourmet-shop: [549, 1628, 36, 38]
            government-building: [802, 18, 36, 38]
            grocery-store: [298, 1627, 36, 38]
            harbor-marina: [1306, 532, 36, 38]
            hardware-store: [298, 1033, 36, 38]
            hiking-trail: [886, 617, 36, 38]
            historic-site: [888, 18, 36, 38]
            hobby-shop: [968, 949, 36, 38]
            hockey-field: [718, 1539, 36, 38]
            hospital: [295, 356, 36, 38]
            hot-dog-joint: [886, 1879, 36, 38]
            hot-pot-restaurant: [1052, 1796, 36, 38]
            hot-spring: [630, 778, 36, 38]
            hotel: [631, 694, 36, 38]
            hunting-supply: [388, 1118, 36, 38]
            ice-cream-shop: [632, 1964, 36, 38]
            information: [385, 2137, 36, 38]
            internet-cafe: [546, 1288, 36, 38]
            island: [462, 777, 36, 38]
            jewelry-store: [468, 1118, 36, 38]
            karaoke: [888, 2052, 36, 38]
            lake: [550, 777, 36, 38]
            landmark: [468, 617, 36, 38]
            laundry: [381, 1200, 36, 38]
            library: [554, 18, 36, 38]
            light-rail: [298, 102, 36, 38]
            lighthouse: [384, 617, 36, 38]
            liquor-store: [715, 1627, 36, 38]
            locate-off: [287, 2277, 143, 145]
            locate-on: [455, 2277, 143, 145]
            lounge: [382, 1713, 36, 38]
            mall: [380, 862, 36, 38]
            marijuana-dispensary: [888, 1033, 36, 38]
            market: [296, 862, 36, 38]
            medical-center: [632, 356, 36, 38]
            military-base: [972, 18, 36, 38]
            mine: [1307, 615, 36, 38]
            miscellaneous-shop: [464, 862, 36, 38]
            mobile-phone-shop: [718, 947, 36, 38]
            molecular-gastronomy: [383, 1796, 36, 38]
            mosque: [382, 273, 36, 38]
            motorcycle-shop: [715, 186, 36, 38]
            mountain: [296, 779, 36, 38]
            movie-theatre: [468, 2052, 36, 38]
            moving-target: [1051, 617, 36, 38]
            museum: [718, 18, 36, 38]
            music-store: [552, 943, 36, 38]
            music-venue: [296, 2052, 36, 38]
            nail-salon: [631, 1199, 36, 38]
            neighborhood: [379, 693, 36, 38]
            newsstand: [1134, 864, 36, 38]
            nightlife: [968, 1712, 36, 38]
            noodle-shop: [632, 1796, 36, 38]
            office: [547, 698, 36, 38]
            office-supplies: [548, 1032, 36, 38]
            optical-shop: [716, 358, 36, 38]
            other-outdoors: [966, 614, 36, 38]
            park: [296, 529, 36, 38]
            parking: [883, 187, 36, 38]
            performing-arts: [546, 2051, 36, 38]
            pet-store: [464, 1366, 36, 38]
            pharmacy: [545, 354, 36, 38]
            photography-lab: [716, 1285, 36, 38]
            picnic-spot: [1222, 698, 36, 38]
            pier: [546, 617, 36, 38]
            pizza: [969, 1874, 36, 38]
            playground: [470, 531, 36, 38]
            police: [300, 18, 36, 38]
            pool: [716, 533, 36, 38]
            pool-hall: [1138, 1540, 36, 38]
            post-office: [468, 18, 36, 38]
            power-pylon: [1139, 693, 36, 38]
            public-art: [1050, 2054, 36, 38]
            racetrack: [1134, 529, 36, 38]
            ramen: [548, 1796, 36, 38]
            real-estate: [297, 1285, 36, 38]
            record-shop: [467, 945, 36, 38]
            recycling-facility: [1054, 18, 36, 38]
            rental-car: [464, 185, 36, 38]
            rest-area: [1473, 194, 36, 38]
            restaurant: [296, 1796, 36, 38]
            river: [716, 779, 36, 38]
            road: [1305, 190, 36, 38]
            route-arrow: [1468, 2305, 132, 162]
            route-start: [1126, 2285, 144, 186]
            route-stop: [1294, 2285, 144, 186]
            ruin: [888, 698, 36, 38]
            salon-barber: [297, 1201, 36, 38]
            school: [380, 442, 36, 38]
            search-active: [790, 2295, 144, 186]
            search-inactive: [622, 2295, 144, 186]
            ship-wreck: [1138, 616, 36, 38]
            shoe-store: [886, 862, 36, 38]
            skate-park: [634, 1539, 36, 38]
            skating-rink: [550, 1539, 36, 38]
            ski-area: [802, 1458, 36, 38]
            smoke-shop: [804, 1033, 36, 38]
            soccer-field: [466, 1539, 36, 38]
            soccer-stadium: [464, 1454, 36, 38]
            soup-place: [380, 1880, 36, 38]
            spa-massage: [548, 1199, 36, 38]
            spiritual-center: [552, 273, 36, 38]
            sporting-goods-shop: [638, 1033, 36, 38]
            spring: [803, 776, 36, 38]
            stable: [804, 617, 36, 38]
            stadium: [380, 1455, 36, 38]
            steakhouse: [884, 1796, 36, 38]
            storage-facility: [1050, 1287, 36, 38]
            subway: [381, 102, 36, 38]
            subway-entrance: [885, 103, 36, 38]
            surf-shop: [722, 1032, 36, 38]
            sushi-restaurant: [718, 1883, 36, 38]
            swimming: [296, 1539, 36, 38]
            synagogue: [296, 271, 36, 38]
            tailor-shop: [882, 1116, 36, 38]
            tanning-salon: [462, 1203, 36, 38]
            tattoo-parlor: [298, 1116, 36, 38]
            taxi: [799, 103, 36, 38]
            tea-room: [380, 1963, 36, 38]
            tennis: [806, 1538, 36, 38]
            theme-park: [798, 529, 36, 38]
            thrift-vintage-store: [805, 864, 36, 38]
            toilets: [1558, 192, 36, 38]
            toll-booth: [1056, 188, 36, 38]
            townspot-l: [562, 2147, 17, 17]
            townspot-l-rev: [562, 2221, 17, 17]
            townspot-m: [648, 2149, 14, 14]
            townspot-m-rev: [648, 2222, 14, 14]
            townspot-s: [732, 2150, 12, 12]
            townspot-s-rev: [732, 2223, 11, 11]
            townspot-xl: [476, 2145, 20, 20]
            townspot-xl-rev: [476, 2219, 20, 20]
            townspot-xs: [818, 2151, 9, 9]
            townspot-xs-rev: [819, 2225, 7, 7]
            toy-game-store: [886, 947, 36, 38]
            track: [886, 1455, 36, 38]
            traffic-signal: [1138, 188, 36, 38]
            train-station: [464, 102, 36, 38]
            travel-agency: [383, 1285, 36, 38]
            veterinarian: [293, 1368, 36, 38]
            video-game-store: [634, 946, 36, 38]
            video-store: [380, 944, 36, 38]
            view-point: [1474, 611, 36, 38]
            vineyard: [1390, 695, 36, 38]
            volcano: [381, 778, 36, 38]
            volleyball-court: [382, 1539, 36, 38]
            well: [635, 617, 36, 38]
            whisky-bar: [298, 1713, 36, 38]
            wine-bar: [801, 1711, 36, 38]
            wine-shop: [378, 1628, 36, 38]
            winery: [715, 1713, 36, 38]
            wings-joint: [1139, 1795, 36, 38]
            zoo: [550, 529, 36, 38]

    building-grid:
        url: images/building-grid.gif
        filtering: mipmap

sources:
    osm:
        # EraserMaps the app only supports MVT format tiles
        type:  MVT #TopoJSONTiles topojson
        #url:  //vector.dev.mapzen.com/osm/all/{z}/{x}/{y}.mvt
        #enforce_winding: true  #because Tangram v0.4 and tiles v0.5-pre don't play nice
        #url:  //localhost:8080//osm/all/{z}/{x}/{y}.mvt
        url:  https://vector.mapzen.com/osm/all/{z}/{x}/{y}.mvt?api_key=vector-tiles-HqUVidw

    #
    # Only enable this for local debug, should not be enabled for prod (app inserts these at runtime)
    # These are all in San Francisco, California
    #
    # Current location gem
    # find_me:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/9e9588228b0a604264a2/raw/b28be49bea0b7feb859eb65b588c28e9fee5ae2c/map.geojson
    # # Route line
    # route:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/9a610ebda6fe4be7bccc/raw/8d217e43f2412d48d01534ba115f1e42dac72e68/map.geojson
    # # Pin at start of route
    # route_start:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/5262969cb7549ea69221/raw/be03f233fa323d9b5cf50ef1d8e89a1faa3750f1/map.geojson
    # # Pin at end of route
    # route_stop:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/dbae9635dfe46796490e/raw/df55c318635a7d91b309ed40754d4738a292fd38/map.geojson
    # # Arrow for current route location
    # route_icon:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/36613092be6e2aa004fd/raw/f753d13069425199e1dea1b449ef67d723f6510e/map.geojson
    # # Pins showing search result locations
    # search:
    #     type: GeoJSON
    #     url: https://gist.githubusercontent.com/anonymous/57dc09eeb120919f76de/raw/43426217da3c2bae0522dc4257aaa61e4df3981e/map.geojson

cameras:
    isometric:
        type: isometric

styles:
    dashedline:
        base: lines
        texcoords: true
        shaders:
            blocks:
                global: |
                    vec2 mirrorTile(vec2 _st, vec2 _zoom){
                        _st *= _zoom;
                        if (fract(_st.y * 0.5) > 0.5){
                            _st.x = _st.x + 0.5;
                            _st.y = 1.0 - _st.y;
                        }
                        return fract(_st);
                    }
                    float fillY(vec2 _st, float _pct,float _antia){
                      return smoothstep( _pct - _antia, _pct, _st.y);
                    }
                    float chevron(vec2 st){
                        st = mirrorTile(st, vec2(1., 6.));
                        float x = st.x * 2.;
                        float a = floor(1. + sin(x * 3.14159));
                        float b = floor(1. - sin(x * 3.14159));
                        float f = fract(x);
                        return fillY(st, mix(a, b, f), 0.01);
                    }
                    float stripes(vec2 st){
                        st = st * 10.;
                        return step(.5, 1.0 - smoothstep(.3, 1., abs(sin(st.y * 3.14159))));
                    }
                    float xMargin(vec2 st, float margin){
                        return 1.0 - clamp(step(margin * .5, st.x) * step(margin * .5, 1.0 - st.x), 0., 1.);
                    }
                color: |
                    vec2 st = v_texcoord;
                    vec4 foreground = vec4(0.867,0.867,0.867,1.0);
                    color = mix(v_color, foreground, stripes(st));

    tools-tilecoords:
        shaders:
            blocks:
                global: |
                    // Varying to be added to both vertex and fragment shaders
                    varying vec2 v_pos;
                    #ifdef TANGRAM_FRAGMENT_SHADER
                    vec2 TileCoords() {
                        return fract(v_pos);
                    }
                    #endif
                position: |
                    v_pos = modelPosition().xy;

    tools-aastep:
        shaders:
            extensions: OES_standard_derivatives
            blocks:
                global: |
                    float aastep(float threshold, float value) {
                        #ifdef TANGRAM_FRAGMENT_SHADER
                            #ifdef TANGRAM_EXTENSION_OES_standard_derivatives
                                float afwidth = length(vec2(dFdx(value), dFdy(value))) * 0.70710678118654757;
                                return smoothstep(threshold - afwidth, threshold + afwidth, value);
                            #else
                                return step(threshold, value);
                            #endif
                        #else
                            return step(threshold, value);
                        #endif
                    }

    tools-grid:
        mix: tools-tilecoords
        shaders:
            blocks:
                global: |
                    #ifdef TANGRAM_FRAGMENT_SHADER
                    bool grid(vec2 st, float res, float press) {
                        vec2 grid = fract(st * res);
                        return (grid.x < res * press) || (grid.y < res * press);
                    }
                    float TileGrid(float res) {
                        vec2 st = TileCoords() * 100. * res;
                        float pct = 0.0;
                        float press = 0.4 + (1.0 - fract(u_map_position.z)) * 0.1;
                        if (grid(st, 0.01, press)) { pct += 0.5; }
                        if (grid(st, 0.1, press)) { pct += 0.1; }
                        return pct;
                    }
                    float TileGrid() {
                        return mix(TileGrid(1.), TileGrid(2.), fract(u_map_position.z));
                    }
                    #endif

    tools-grain:
        shaders:
            blocks:
                global: |
                    // Grain
                    //=============================
                    float random(vec2 p) {
                        return fract(1e4 * sin(17.0 * p.x + p.y * 0.1) * (0.1 + abs(sin(p.y * 13.0 + p.x))));
                    }
                    float noise(vec2 x) {
                        vec2 i = floor(x);
                        vec2 f = fract(x);
                        float a = random(i);
                        float b = random(i + vec2(1.0, 0.0));
                        float c = random(i + vec2(0.0, 1.0));
                        float d = random(i + vec2(1.0, 1.0));
                        vec2 u = f * f * (3.0 - 2.0 * f);
                        return mix(a, b, u.x) + (c - a) * u.y * (1.0 - u.x) + (d - b) * u.x * u.y;
                    }
                    float fbm(in vec2 p) {
                        float s = 0.0;
                        float m = 0.0;
                        float a = 0.5;
                        for(int i = 0; i < 2; i++ ) {
                            s += a * noise(p);
                            m += a;
                            a *= 0.5;
                            p *= 2.0;
                        }
                        return s/m;
                    }
                    float grain(vec2 pos) {
                        vec2 st = pos / u_resolution.xy - vec2(.5);
                        return dot(st, st) + (fbm(pos * 0.6) * 0.1);
                    }

    grid:
        base: polygons
        mix: [tools-grain, tools-grid]
        shaders:
            blocks:
                filter: |
                    color.rgb = vec3(0.899, 0.95, 1.0);
                    color.rgb -= grain(gl_FragCoord.xy) * 0.1;
                    color.rgb = mix(color.rgb, vec3(0.639, 0.886, 0.906), TileGrid());

    water_border:
        base: lines
        texcoords: true
        mix: tools-aastep
        shaders:
            blocks:
                global: |
                    float pulse(float x, float p, float w) {
                        x = abs(x - p);
                        if (x > w) { return 0.0; }
                        x /= w;
                        return (1.0 - x * x * (3.0 - 2.0 * x));
                    }
                width: |
                    // Comment/Uncomment to fix the line to the border
                    width *= 1.0 - v_texcoord.x;
                color: |
                    vec2 st = v_texcoord.xy;
                    float pattern = aastep(.5, pulse(st.x, .75, .15) + pulse(st.x, .4, .10) + pulse(st.x, .1, .1));
                    color.rgb = mix(color.rgb, vec3(0.675,0.855,0.886), pattern);

    ground:
        base: polygons
        mix: tools-grain
        shaders:
            blocks:
                filter: |
                    color.rgb -= (0.22 - grain(gl_FragCoord.xy)) * 0.21;

    shapes-circle:
        shaders:
            blocks:
                global: |
                    // get distance field of a Circle
                    // ================================
                    float circleDF (vec2 st) {
                        return dot(st,st);
                    }

    tiling-brick:
        shaders:
            blocks:
                global: |
                    // Repeats a coordinate space (st) in diferent brick-like tiles
                    // ================================
                    vec2 brick(vec2 st, float zoom){
                        st *= zoom;
                        // Here is where the offset is happening
                        st.x += step(1., mod(st.y, 2.0)) * 0.5;
                        return fract(st);
                    }

    pattern-dots:
        mix: [tools-tilecoords, tiling-brick, shapes-circle, tools-aastep]
        shaders:
            blocks:
                global: |
                    #ifdef TANGRAM_FRAGMENT_SHADER
                        float TileDots(float scale, float size) {
                            vec2 IN = brick(TileCoords() * scale, 2.);
                            float A = circleDF(vec2(0.5) - IN) * 1.8;
                            float d = 0.0;
                            if (u_map_position.z < 18.) {
                                vec2 OUT = fract(TileCoords() * scale * 2.);
                                float B = circleDF(vec2(0.25) - OUT) * 7.;
                                B = min(B, circleDF(vec2(0.75, 0.25) - OUT) * 7.);
                                B = min(B, circleDF(vec2(0.50, 0.75) - OUT) * 7.);
                                B = min(B, circleDF(vec2(0.00, 0.75) - OUT) * 7.);
                                B = min(B, circleDF(vec2(1.00, 0.75) - OUT) * 7.);
                                d = mix(A, B, pow(fract(u_map_position.z), 10.));
                            } else {
                                d = A;
                            }
                            return aastep(size, d);
                        }
                    #endif

    dots2:
        base: polygons
        mix: pattern-dots
        shaders:
            blocks:
                color: |
                    color.rgb = mix(color.rgb, vec3(0.850), TileDots(45., 0.1));
                    // size was set to 35 previously, now 45

    dots-rev:
        base: polygons
        mix: pattern-dots
        shaders:
            blocks:
                color: |
                    color.rgb = mix(vec3(0.850), color.rgb, TileDots(45., .21));

    # HSV/RGB functions
    hsv:
        shaders:
            blocks:
                global: |
                    vec3 rgb2hsv(vec3 c)
                    {
                        vec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);
                        vec4 p = mix(vec4(c.bg, K.wz), vec4(c.gb, K.xy), step(c.b, c.g));
                        vec4 q = mix(vec4(p.xyw, c.r), vec4(c.r, p.yzx), step(p.x, c.r));
                        float d = q.x - min(q.w, q.y);
                        float e = 1.0e-10;
                        return vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), d / (q.x + e), q.x);
                    }
                    vec3 hsv2rgb(vec3 c)
                    {
                        vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);
                        vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);
                        return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);
                    }

    scale-buildings:
        shaders:
            blocks:
                position: |
                    // scale buildings based on zoom
                    float zoom = u_map_position.z;
                    float min = .1;         // minimum building scale
                    float midpoint = 16.; // middle of zoom range
                    float speed = 2.;  // number of zoom levels to transition over
                    float e = (zoom - midpoint) / (speed * .2);
                    position.z *= ((1. - min) / (1. + (exp(e)))) + min;

    building-grid:
        base: polygons
        mix: [hsv, scale-buildings]
        texcoords: true
        material:
            diffuse:
                texture: building-grid
                mapping: uv
        shaders:
            defines:
                WALL_TINT: vec3(1., 3., .800) # modifies roof color HSV
            blocks:
                filter: |
                    if (dot(vec3(0., 0., 1.), worldNormal()) < 1.0 - TANGRAM_EPSILON) {
                        // If it's a wall
                        vec3 wall = hsv2rgb(
                            rgb2hsv(v_color.rgb) * WALL_TINT
                        );
                        color.rgb = mix(color.rgb, wall, 1. - color.a);

                        // turn wall opaque, alpha was used to blend w/wall color,
                        // but we don't want the wall itself to be transparent
                        color.a = 1.;
                    } else {
                        // it's a roof, use vertex color without texture
                        color = v_color;
                    }

    # building-grid-univ:
    #     mix: building-grid
    #     shaders:
    #         defines:
    #             ROOF_COLOR: vec3(0.922,0.894,0.862)
    #             WALL_COLOR: vec3(0.658,0.617,0.576)

    # building-grid-parks:
    #     mix: building-grid
    #     shaders:
    #         defines:
    #             ROOF_COLOR: vec3(0.847,0.886,0.882)
    #             WALL_COLOR: vec3(0.627,0.722,0.718)

    # building-grid-hospital:
    #     mix: building-grid
    #     shaders:
    #         defines:
    #             ROOF_COLOR: vec3(0.941,0.894,0.898)
    #             WALL_COLOR: vec3(0.692,0.575,0.586)

    # building-grid-retail:
    #     mix: building-grid
    #     shaders:
    #         defines:
    #             ROOF_COLOR: vec3(0.945,0.898,0.878)
    #             WALL_COLOR: vec3(0.725,0.694,0.678)

    building-lines:
        base: lines
        mix: scale-buildings
        texcoords: true
    icons:
        base: points
        texture: pois
        interactive: true
        blend_order: 1
    text-blend-order:
        base: text
        blend_order: 1
    icons-overlay:
        base: points
        texture: pois
        interactive: true
        blend: overlay
        blend_order: 2
    lines-overlay:
        base: lines
        blend: overlay
        blend_order: 0

scene:
    background:
        color: *scene1

layers:
    # Map overlays for styling the server response (using special source layer names) for route line, find_me location gem, and search result pins
    route:
        data: { source: route }
        draw:
            lines-overlay:
                color: '#71bf7c'
                order: 50
                width: [[0,2.5px],[8,3px],[9,3.5px],[10,4px],[11,5px],[16,8m]]
    current_location_gem:
        data: { source: find_me }
        draw:
            icons-overlay:
                sprite: current-location
                size: 36px
                collide: false
                transition:
                    [show, hide]:
                        time: 0s
    route_icon:
        data: { source: route_icon }
        draw:
            icons-overlay:
                sprite: route-arrow
                size: [33px,40px]
                collide: false
                transition:
                    [show, hide]:
                        time: 0s
    route_start:
        data: { source: route_start }
        draw:
            icons-overlay:
                priority: 1
                sprite: route-start
                size: [36px,46px]
                collide: false
                anchor: top
    route_stop:
        data: { source: route_stop }
        draw:
            icons-overlay:
                priority: 1
                sprite: route-stop
                size: [36px,46px]
                collide: false
                anchor: top
    search:
        data: { source: search }
        draw:
            icons-overlay:
                sprite: search-active
                size: [36px,46px]
                collide: false
                anchor: top
        inactive:
            filter: { state: inactive }
            draw:
                icons:
                    sprite: search-inactive

    # Basemap styling
    earth:
        data: { source: osm, layer: earth }
        draw:
            polygons:
                order: 0
                color: [0.870,0.870,0.870]

    water:
        data: { source: osm, layer: water }
        draw:
            grid:
                order: 5
                #color: *water1
        lakes:
            filter:
                all:
                    - kind: [ocean, lake, water, riverbank, reservoir]
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 1 },  area: { min: 40000000000 } }
                    - { $zoom: { min: 2 },  area: { min: 20000000000 } }
                    # some weird natural earth scale set transition
                    - { $zoom: { min: 3 },  area: { min: 80000000000 } }
                    - { $zoom: { min: 4 },  area: { min: 5000000000 } }
                    - { $zoom: { min: 5 },  area: { min: 700000000 } }
                    - { $zoom: { min: 6 },  area: { min: 500000000 } }
                    - { $zoom: { min: 7 },  area: { min: 160000000 } }
                    - { $zoom: { min: 8 },  area: { min: 40000000 } }
                    - { $zoom: { min: 9 },  area: { min: 10000000 } }
                    - { $zoom: { min: 10 }, area: { min: 8000000 } }
                    - { $zoom: { min: 11 }, area: { min: 2000000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 2000 } }
                    - { $zoom: { min: 15 } }
            draw:
                grid:
                    color: *water1
        other-water-areas:
            filter: { not: { kind: [ocean, lake, water, reservoir, playa] }, $zoom: { min: 11 }, area: { min: 100 } }
            draw:
                grid:
                    color: *water1
        playas:
            filter: { kind: playa, $zoom: {min: 6} }
            draw:
                polygons:
                    color: [0.870,0.870,0.870]
        water-boundary-ocean-early:
            filter: { boundary: yes, kind: ocean, $zoom: {min: 1, max: 17} }
            draw:
                line2:
                    style: lines
                    order: 7
                    width: [[9,0.25px],[10,2px],[11,3px],[13,4px],[15,6px]]
                    color: [[9,[0.396,0.833,0.920]],[10,[0.886,0.937,0.988]]]
                lines:
                    order: 10
                    color: [[1,[0.698,0.800,0.820]],[11,[0.631,0.773,0.800]],[14,[0.543,0.740,0.780]]]
                    width: [[1,0.25px],[6,0.5px],[7,0.75px],[9,0.75px],[10,1px]]
        water-boundary-ocean-late:
            filter: { boundary: yes, kind: ocean, $zoom: {min: 17} }
            draw:
                water_border:
                    order: 10
                    color: [[0,[0.886,0.937,0.988]]]
                    width: 20px
        water_boundaries-not-ocean:
            filter: { boundary: yes, not: { kind: ocean }, $zoom: { min: 8 } }
            draw:
                double-border-light:
                    style: lines
                    order: 30
                    color: [0.886,0.937,0.988]
                    width: [[9,0px],[10,2px],[11,1.5px],[12,3px],[13,3.5px],[14,4px],[15,5px],[16,6px],[18,8px]]
                lines:
                    order: 30
                    # color: [[8,[0.635,0.737,0.753]],[13,[0.635,0.737,0.753]],[14,[0.569,0.722,0.749]],[15,[0.397,0.743,0.809]]]
                    color: [[8,[0.749,0.831,0.867]],[12,[0.698,0.788,0.816]],[13,[0.698,0.784,0.812]],[14,[0.627,0.788,0.831]],[17,[0.643,0.824,0.851]]]
                    width: [[8,0.5px],[10,0.5px],[11,0.5px],[12,0.75px],[13,1px],[14,1px],[15,1px],[16,1px],[17,1px]]
                    join: round
            early:
                filter: { $zoom: { min: 14 } }
                draw:
                    double-border-light: { order: 19 }
                    lines: { order: 19 }
            riverbank:
                # river boundaries like the thames in london, la seine in paris
                filter: { kind: riverbank }
                draw:
                    lines:
                        # color: [0.397,0.743,0.809]
                        color: [[8,[0.667,0.792,0.824]],[11,[0.698,0.808,0.835]],[13,[0.710,0.796,0.824]],[14,[0.522,0.792,0.855]]]
                        width: [[9,0.5px],[10,0.75px],[11,0.75px],[12,0.8px],[13,1px],[14,1px],[15,1px],[16,1px],[17,1.5px]]
        river:
            #river center lines, not boundaries for polygons
            filter: { kind: [river,canal,stream,dam,ditch,drain], $zoom: { min: 11 } }
            draw:
                # lines:
                #     order: 3
                #     color: [0.397,0.743,0.809]
                #     width: [[11,0.3px],[12,0.5px],[13,0.75px],[14,1px],[16,1.25px]]
                #     join: round
                double-border-light:
                    style: lines
                    order: 3
                    color: [[11,[0.671,0.788,0.812]],[13,[0.710,0.800,0.824]],[14,[0.543,0.740,0.780]]]
                    width: [[9,0px],[11,0px],[12,0px],[13,2.5px],[14,3.25px],[15,4px],[16,5px],[17,6px]]
                lines:
                    order: 3
                    # color: [[8,[0.635,0.737,0.753]],[13,[0.635,0.737,0.753]],[14,[0.569,0.722,0.749]],[15,[0.397,0.743,0.809]]]
                    color: [[11,[0.753,0.820,0.835]],[12,[0.710,0.800,0.824]],[13,[0.886,0.937,0.988]]]
                    width: [[8,0px],[10,0px],[11,0.75px],[12,1px],[13,1px],[14,2px],[15,3px],[16,4px],[17,5px]]
                    join: round

    subway-light-rail:
        data: { source: osm, layer: transit }
        filter: { kind: [railway,subway,light_rail], $zoom: { min: 14 } }
        draw:
            lines:
                interactive: true
                order: function() { return (6 + feature.sort_key) || 6; }
        railway:
            filter: { kind: railway }
            draw:
                lines:
                    color: [0.644,0.686,0.700]
                    width: [[14,1px],[16,2px],[18,2px]]
        subway:
            filter: { kind: subway }
            draw:
                lines:
                    color: *rail1
                    width: [[14,0.5px],[16,1px],[17,1.5px],[18,2m]]
        light_rail:
            filter: { kind: light_rail, $zoom: { min: 15 } }
            draw:
                lines:
                    color: [0.588,0.671,0.698]
                    width: [[14,0px],[15,0.6px],[16,1px],[17,1.5px],[19,1m]]
                    order: 30

    railway-late:
        data: { source: osm, layer: roads }
        filter: { kind: rail, not: { railway: [subway,light_rail] } }
        draw:
            lines:
                interactive: true
                color: [0.588,0.671,0.698]
                width: [[12,0px],[13,0.25px],[14,0.4px],[15,0.75px],[16,0.75px],[18,1px]]
        service:
            filter: { service: true }
            draw:
                lines:
                    color: [0.588,0.671,0.698]
                    width: [[14,0px],[15,0.5px],[16,0.75px],[17,1px],[18,0.7m]]
        z-order:
            #filter: { $zoom: {min: 12} }
            draw:
                lines:
                    # let roads sort themselves past zoom 14
                    order: function() { return (6 + feature.sort_key) || 6; }
                    # but give them all the same outline
                    outline:
                        order: 21 # 15 is the starting aboveground level, plus 6

            bridges-tunnels:
                filter: { any: [is_bridge: yes, is_tunnel: yes] }
                draw:
                    lines:
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return (6 + feature.sort_key) || 6; }

    roads:
        data: { source: osm, layer: roads }
        filter: { not: { kind: rail } }
        draw:
            lines:
                interactive: true
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                font:
                    family: *text_font_family
                    weight: 400
                    fill: *text_fill

        natural_earth_highways:
            filter: { source: 'naturalearthdata.com' }
            draw:
                lines:
                    # put highways on top of all other roads
                    order: 8
                    # Perf impact (too many vertices)
                    #cap: round
                    #join: round
                    color: *highway1
                    width: [[5, 1px], [7, 1.4px], [9, 1.5px], [14, 3px], [16, 4px], [17, 10m]]
                    outline:
                        color: *highway_casing1
            major_road:
                filter: { type: ['Secondary Highway','Road'] }
                draw:
                    lines:
                        color: [0.980,0.601,0.559]
                        width: [[5, 0.45px], [6, 0.75px], [7, 1.0px], [8, 1px]]
            minor_road:
                filter: { type: 'Unknown' }
                draw:
                    lines:
                        # order: 3
                        color: [[12, *minor_road1], [17, *minor_road2]]
                        width: [[12, 1.0px], [14, 1.5px], [15, 3px], [16, 5m]]
            ferry:
                filter: { kind: Ferry }
                draw:
                    lines:
                        # order: 3
                        color: [0.702,0.843,0.933]
                        width: 1px
        highway:
            filter: { kind: highway }
            draw:
                lines:
                    # put highways on top of all other roads
                    order: 8
                    color: [[8, *highway1], [14, *highway1], [15, [1.0,1.0,1.0]], [17, [1.0,1.0,1.0]]]
                    width: [[8, 1px], [9, 1.25px], [11, 1.2px], [12, 1.3px], [13, 1.5px], [14, 2.25px], [15, 0.15px], [16, 5.5px], [17, 12m]]
                    outline:
                        color: [[9, *highway_casing1], [13, *highway_casing1], [15,[0.988,0.495,0.439]], [17, [0.988,0.495,0.439]]]
                        width: [[9, 0.5px], [12, 1px], [15, 2px], [16, 2.25px], [17, 3px], [18, 3px]]
            # round:
            #     filter: { $zoom: { min: 17 } }
            #     draw:
            #         lines:
            #             cap: round
            not_link:
                filter: { not: { is_link: yes }, $zoom: {max: 15} }
                draw:
                    lines:
                        order: function() { return (7 + feature.sort_key) || 7; }
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return (7 + feature.sort_key) || 7; }
            link:
                filter: { is_link: yes } # on- and off-ramps, etc
                draw:
                    lines:
                        color: [[9, *highway_link1], [14, *highway_link1], [15, [1.0,1.0,1.0]], [17, [1.0,1.0,1.0]]]
                        width: [[9, 0px], [11, 0.5px], [13, 1px], [14, 1px], [15, 0.15px], [16, 3px], [17, 4m], [18, 5m]]
                        cap: butt
                        outline:
                            color: [[10, *highway_casing1], [16, [0.988,0.495,0.439]], [17, [0.988,0.495,0.439]]]
                            width: [[14, 0px], [15, 0.85px], [17, 1.125px], [18, 1.5px]]
                early_link:
                    filter: { $zoom: {min: 13, max: 15} }
                    draw:
                        lines:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return (7 + feature.sort_key) || 7; }
                tunnel-link:
                    filter: {is_tunnel: yes, $zoom: {min: 13} }
                    draw:
                        lines:
                            color: *highway_tunnel1
                            outline:
                                color: *highway_tunnel_casing1
            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        # color: [[16, [0.843,0.843,0.843]]]
                        color: [[16, [0.85,0.85,0.85]]]
                        outline:
                            color: [[13, [0.890,0.890,0.890]], [14, [0.870,0.870,0.870]], [16, [0.824,0.753,0.741]]]
            highway_bridge:
                filter: {is_bridge: yes}
                draw:
                    lines:
                        cap: butt
            labels-highway-early:
                filter: { $zoom: [7,8,9] }
                draw:
                    text-blend-order:
                        priority: 20
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: [1.0,1.0,1.0]
                            weight: 600
                            size: 9px
                            stroke: { color: [0.976,0.541,0.490], width: 3 }
            labels-highway-z10:
                filter:
                    $zoom: 10
                draw:
                    text-blend-order:
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: [1.0,1.0,1.0]
                            weight: 600
                            size: 10px
                            stroke: { color: [0.976,0.541,0.490], width: 3 }
            labels-highway-z11:
                filter:
                    $zoom: 11
                draw:
                    text-blend-order:
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: [1.0,1.0,1.0]
                            weight: 600
                            size: 11px
                            stroke: { color: [0.976,0.541,0.490], width: 3 }
            labels-highway-z12:
                filter:
                    $zoom: 12
                draw:
                    text-blend-order:
                        visible: *text_visible_highway_e
                        text_source: ref
                        font:
                            fill: [1.0,1.0,1.0]
                            weight: 600
                            size: 12px
                            stroke: { color: [0.976,0.541,0.490], width: 3 }
            labels-highway-z13:
                filter:
                    $zoom: 13
                draw:
                    text-blend-order:
                        priority: 20
                        visible: *text_visible_highway
                        #text_source: ref
                        text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: [0.0,0.0,0.0]
                            weight: 600
                            size: 12px
                            # stroke: { color: [0.976,0.541,0.490], width: 4 }
            labels-highway-z14:
                filter:
                    $zoom: 14
                draw:
                    text-blend-order:
                        priority: 20
                        visible: *text_visible_highway
                        #text_source: ref
                        text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                        font:
                            fill: [0.0,0.0,0.0]
                            size: 12px
                            # stroke: { color: [0.976,0.541,0.490], width: 4 }
            labels-highway-z15:
                filter:
                    $zoom: 15
                draw:
                    text-blend-order:
                        visible: *text_visible_highway
                        font:
                            fill: [0.0,0.0,0.0]
                            size: 14px
                            # stroke: { color: [0.976,0.541,0.490], width: 4 }
            later2:
                filter: { $zoom: { min: 16, max: 18 } }
                draw:
                    text-blend-order:
                        priority: 20
                        visible: *text_visible_highway
                        font:
                            fill: [0.0,0.0,0.0]
                            size: 15px
                            # stroke: { color: *text_stroke, width: 4 }
            later3:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 20
                        visible: *text_visible_highway
                        font:
                            fill: [0.0,0.0,0.0]
                            size: 18px

        major_road:
            filter: { kind: major_road }
            # default style
            draw:
                lines:
                    color: [[8, *major_road4], [13, *major_road2], [17, *major_road1]]
                    width: [[13, 0px], [14, 2px], [16, 2.5px], [19, 8m]]
                    outline:
                        width: [[12, 0px], [13, .5px], [15, 1px]]
            trunk_primary:
                filter: { highway: [trunk, primary] }
                draw:
                    lines:
                        color: [1.0,1.0,1.0]
                        width: [[9, 0.5px], [10, 0.5px], [11, 1.0px], [12, 1.0px], [13, 1.5px], [14, 2.5px], [15, 5px], [16, 10m], [17, 10m]]
                        outline:
                            color: [[13, [0.827,0.827,0.827]], [15, [1.000,0.739,0.710]]]
                            # todo: investigate width optimizations
                            width: [[9, 0.0px], [11, 0px], [12, 0px], [14, 0px], [15, 1.75px], [16, 2px], [17, 3px]]
                routes:
                    filter: { ref: true }
                    draw:
                        lines:
                            color: [[9,*major_route1], [14,*major_route1], [15,[1.0,1.0,1.0]], [16,[1.0,1.0,1.0]]]
                            # todo confirm widths
                            width: [[9, 1.0px], [10, 1.0px], [11, 1.2px], [12, 1.25px], [13, 1.5px], [14, 1.6px], [15, 0.15px], [16, 5.25px], [17, 12m]]
                            outline:
                                color: [[13, [0.870,0.870,0.870]], [15, [0.976,0.612,0.573]]]
                                width: [[9, 0.0px], [12, 0px], [15, 2px], [16, 2px], [17, 3px]]
                    # no national-routes layer because it's not different than the basic style
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    z-order:
                        #filter: { $zoom: {min: 12} }
                        draw:
                            lines:
                                # let roads sort themselves past zoom 14
                                order: function() { return (8 + feature.sort_key) || 8; }
                                # but give them all the same outline
                                outline:
                                    order: 23 # 15 is the starting aboveground level, plus 8
                    labels-trunk_primary-route-z14:
                        filter: { $zoom: [14] }
                        draw:
                            text-blend-order:
                                priority: 23
                                visible: *text_visible_trunk_primary
                                text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: [0.0,0.0,0.0]
                                    size: 12px
                                    stroke: { color: [0.95,0.95,0.95], width: 0.1px }
                    labels-trunk_primary-route-z15:
                        filter: { $zoom: [15] }
                        draw:
                            text-blend-order:
                                priority: 23
                                visible: *text_visible_trunk_primary
                                text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: [0.0,0.0,0.0]
                                    weight: 600
                                    size: 14px
                                    stroke: { color: [0.95,0.95,0.95], width: 0.1px }
                    labels-trunk_primary-route-z16:
                        filter: { $zoom: { min: 16 } }
                        draw:
                            text-blend-order:
                                priority: 23
                                visible: *text_visible_trunk_primary
                                text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                                font:
                                    fill: [0.0,0.0,0.0]
                                    weight: 600
                                    size: 15px
                                    stroke: { color: [0.95,0.95,0.95], width: 0.1px }
                labels-trunk_primary-z11:
                    filter:
                        $zoom: [11]
                    draw:
                        text-blend-order:
                            priority: 23
                            visible: *text_visible_trunk_primary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.4,0.4,0.4]
                                size: 10px
                                # stroke: { color: [1.000,0.631,0.590], width: 3 }
                labels-trunk_primary-z12:
                    filter:
                        $zoom: [12]
                    draw:
                        text-blend-order:
                            priority: 23
                            visible: *text_visible_trunk_primary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.4,0.4,0.4]
                                size: 11px
                                # stroke: { color: [1.000,0.631,0.590], width: 3 }
                labels-trunk_primary-z13:
                    filter:
                        $zoom: [13]
                    draw:
                        text-blend-order:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 12px
                                stroke: { color: *text_stroke, width: 2 }
                labels-trunk_primary-z14:
                    filter:
                        $zoom: [14]
                    draw:
                        text-blend-order:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 12px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-trunk_primary-z15:
                    filter: { $zoom: [15] }
                    draw:
                        text-blend-order:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 14px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
                labels-trunk_primary-z16-z17:
                    filter: { $zoom: { min: 16, max: 18 } }
                    draw:
                        text-blend-order:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 15px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
                labels-trunk_primary-z18:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 23
                            visible: *text_visible_trunk_primary
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 16px
            link:
                filter: { is_link: yes } # on- and off-ramps, etc
                draw:
                    lines:
                        width: [[9, 0px], [10, 0.5px], [14, 2px], [16, 4m], [17, 5m], [18, 6m]]
                        outline:
                            color: [[9, [0.827,0.827,0.827]], [13, [0.827,0.827,0.827]], [15, [1.000,0.739,0.710]]]
                            width: [[9, 0px], [10, 1px], [14, 1px], [16, 1.5px], [17, 2px]]
            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        color: *major_tunnel1
                        outline:
                            color: *major_tunnel_casing1
            secondary:
                filter: { highway: secondary }
                draw:
                    lines:
                        color: [1.0,1.0,1.0]
                        width: [[11, 0.65px], [12, 0.75px], [13, 1.25px], [14, 2px], [15, 5px], [16, 10m], [17, 10m]]
                        outline:
                            color: [[15, [1.000,0.739,0.710]]]
                            width: [[11, 0px], [14, 0px], [15, 1.75px], [16, 2px], [17, 3px]]
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: [1.0,1.0,1.0]
                            width: [[11, 0.65px], [12, 0.75px], [13, 1.25px], [14, 2px], [15, 5px], [16, 12m], [17, 12m]]
                            outline:
                                color: [0.827,0.827,0.827]
                                width: [[11, 0px], [14, 0px], [15,  1.75px], [16, 2px], [17, 3px]]
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                    labels-secondary-routes:
                        filter: { $zoom: [13] }
                        draw:
                            text-blend-order:
                                priority: 24
                                visible: *text_visible_secondary_e
                                text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                                font:
                                    # need fill here?
                                    size: 12px
                                    stroke: { color: *text_stroke, width: 4 }
                    labels-secondary-routes-z15:
                        filter: { $zoom: { min: 15 } }
                        draw:
                            text-blend-order:
                                priority: 24
                                visible: *text_visible_secondary_e
                                text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                                font:
                                    # need fill here?
                                    weight: 600
                                    size: 14px
                                    stroke: { color: *text_stroke, width: 4 }
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            color: [1.0,1.0,1.0]
                            outline:
                                color: [[14, [0.800,0.851,0.847]], [15, [0.678,0.796,0.792]]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: [0.757,0.839,0.788]
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: [0.635,0.819,0.742]
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: orange
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: pink
                labels-secondary-z13:
                    filter:
                        $zoom: [13]
                    draw:
                        text-blend-order:
                            priority: 24
                            visible: *text_visible_secondary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.5,0.5,0.5]
                                size: 11px
                                stroke: { color: *text_stroke, width: 2 }
                labels-secondary-z14:
                    filter:
                        $zoom: [14]
                    draw:
                        text-blend-order:
                            priority: 24
                            visible: *text_visible_secondary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.30,0.30,0.30]
                                size: 12px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-secondary-z15:
                    filter:
                        $zoom: [15]
                    draw:
                        text-blend-order:
                            priority: 24
                            visible: *text_visible_secondary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.10,0.10,0.10]
                                size: 12px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-secondary2:
                    filter: { $zoom: { min: 16, max: 18 } }
                    draw:
                        text-blend-order:
                            priority: 24
                            visible: *text_visible_secondary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.0,0.0,0.0]
                                size: 14px
                                stroke: { color: [1.00,1.00,1.00], width: 3 }
                labels-secondary3:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 24
                            visible: *text_visible_secondary
                            #text_source: ref
                            text_source: function() { if( feature.ref && feature.name ) { return feature.ref + " " + feature.name; } else { return feature.name; } }
                            font:
                                # need a fill color here?
                                fill: [0.15,0.15,0.15]
                                size: 16px
            tertiary:
                filter: { highway: [tertiary, tertiary_link] }
                draw:
                    lines:
                        color: [1.0,1.0,1.0]
                        width: [[11, 0.5px], [12, 0.5px], [13, 0.65px], [14, 1.0px], [15, 2px], [16, 8m], [19, 10m]]
                        outline:
                            color: [0.827,0.827,0.827]
                            # todo: look at zoom 13 width
                            width: [[12, 0px], [13, 0px], [14, 0px], [15, 0px], [16, 1.0px], [18, 3.5px]]
                routes:
                    filter: { ref: true, $zoom: { min: 12} }
                    draw:
                        lines:
                            color: [1.0,1.0,1.0]
                            width: [[11, 0.5px], [12, 0.5px], [13, 0.65px], [14, 1.0px], [15, 2px], [16, 8m], [19, 10m]]
                            outline:
                                color: [0.827,0.827,0.827]
                                width: [[12, 0px], [13, 0px], [14, 0px], [15, 0px], [16, 1.0px], [18, 3.5px]]
                    tunnel:
                        filter: {is_tunnel: yes, $zoom: {min: 13} }
                        draw:
                            lines:
                                order: 6
                                color: *major_tunnel1
                                outline:
                                    color: *major_tunnel_casing1
                link:
                    filter: { is_link: yes } # on- and off-ramps, etc
                    draw:
                        lines:
                            color: *major_road1
                            width: [[10, 0.5px], [14, 2px], [16, 4m], [17, 5m], [18, 6m]]
                            outline:
                                color: [[12,*major_casing2]]
                                width: [[12, 0px], [14, 1px], [16, 1.5px], [17, 2px]]
                in_park:
                    filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                    draw:
                        lines:
                            #width: [[11, 0.0px], [12, .5px], [14, 1.5px], [16, 2.0px], [19, 7m]]
                            color: [[12, [0.9,0.9,0.9]], [13, [0.9,0.9,0.9]], [14, [0.98,0.98,0.98]]]
                            outline:
                                color: [[14, [0.800,0.851,0.847]], [15, [0.678,0.796,0.792]]]
                                width: [[12, 0px], [13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.5px], [18, 3.0px]]
                    golf_course:
                        filter: { landuse_kind: golf_course }
                        draw:
                            lines:
                                outline:
                                    color: [0.698,0.835,0.765]
                    nature_reserve:
                        filter: { landuse_kind: nature_reserve }
                        draw:
                            lines:
                                outline:
                                    color: [0.635,0.819,0.742]
                    conservation:
                        filter: { landuse_kind: conservation }
                        draw:
                            lines:
                                outline:
                                    color: orange
                    zoo:
                        filter: { landuse_kind: zoo }
                        draw:
                            lines:
                                outline:
                                    color: pink
                labels-tertiary-z13:
                    filter: { $zoom: [13] }
                    draw:
                        text-blend-order:
                            priority: 25
                            visible: *text_visible_tertiary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.5,0.5,0.5]
                                size: 10px
                                stroke: { color: [1.00,1.00,1.00], width: 1 }
                labels-tertiary-z14:
                    filter: { $zoom: [14] }
                    draw:
                        text-blend-order:
                            priority: 25
                            visible: *text_visible_tertiary_e
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.5,0.5,0.5]
                                size: 11px
                                stroke: { color: [1.00,1.00,1.00], width: 1 }
                labels-tertiary-z15:
                    filter: { $zoom: [15] }
                    draw:
                        text-blend-order:
                            priority: 25
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.3,0.3,0.3]
                                size: 12px
                                stroke: { color: [1.00,1.00,1.00], width: 1 }
                labels-tertiary-z16:
                    filter: { $zoom: [16] }
                    draw:
                        text-blend-order:
                            priority: 25
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.3,0.3,0.3]
                                size: 12px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-tertiary-z17:
                    filter: { $zoom: { min: 17, max: 18 } }
                    draw:
                        text-blend-order:
                            priority: 25
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 13px
                                stroke: { color: [1.00,1.00,1.00], width: 2 }
                labels-tertiary3:
                    filter: { $zoom: { min: 18 } }
                    draw:
                        text-blend-order:
                            priority: 25
                            visible: *text_visible_tertiary
                            text_source: function() { if( feature.ref && feature.name ) { if( feature.ref.length < 6 ) { return feature.ref + " " + feature.name; } else { return feature.name; } } else { return feature.name; } }
                            font:
                                fill: [0.15,0.15,0.15]
                                size: 14px
                                # stroke: { color: *major_road1, width: 4 }
        minor_road:
            filter: { kind: minor_road, not: { highway: service, aeroway: [runway, taxiway] } }
            draw:
                lines:
                    color: [[12, [0.9,0.9,0.9]], [13, [0.9,0.9,0.9]], [14, [1.0,1.0,1.0]]]
                    width: [[12, 0.65px], [13, 0.75px], [14, 0.85px], [15, 2px], [16, 8m], [17, 9m]]
                    # todo look at when color starts (z11 not z12) and width changes
                    #width: [[11, 0.5px], [12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.5px], [16, 8m]]
                    outline:
                        color: [0.843,0.843,0.843]
                        width: [[12, 0.0px], [13, 0px], [15, 0px], [16, 2px], [17, 3px]]
            # Force minor roads to draw under everything else early (server bug?)
            early:
                filter: { $zoom: { max: 14 } }
                draw:
                    lines:
                        order: 15

            # Is this junk code?
            round:
                filter: { $zoom: { min: 17 } }
                draw:
                    lines:
                        cap: round
                        join: round
                        #order: 15

            in_park:
                filter: { landuse_kind: [park,protected_area,nature_reserve,conservation,golf_course,garden,wood,farmland,farm] }
                draw:
                    lines:
                        #todo: is the width here right?
                        #width: [[11, 0.5px], [12, 1.0px], [13, 1.2px], [14, 1.75px], [15, 2.5px], [16, 8m]]
                        color: [[12, [0.9,0.9,0.9]], [13, [0.96,0.96,0.96]], [14, [1.0,1.0,1.0]]]
                        outline:
                            color: [[14, [0.800,0.851,0.847]], [15, [0.678,0.796,0.792]]]
                            #todo: is the width here right?
                            width: [[13, 0px], [14, 0.25px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [0.757,0.839,0.788]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [0.635,0.819,0.742]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: orange
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: pink

            # in_residential:
            #     filter: { landuse_kind: residential }
            #     draw:
            #         lines:
            #             outline:
            #                 color: red
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        color: [[12, [0.9,0.9,0.9]], [13, [0.96,0.96,0.96]], [14, [1.0,1.0,1.0]]]
                        outline:
                            color: [0.806,0.763,0.717]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        color: [[12, [0.9,0.9,0.9]], [13, [0.96,0.96,0.96]], [14, [1.0,1.0,1.0]]]
                        outline:
                            color: [0.818,0.702,0.713]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]

            tunnel:
                filter: {is_tunnel: yes, $zoom: {min: 13} }
                draw:
                    lines:
                        order: 6
                        color: [0.870,0.870,0.870]
                        outline:
                            color: [0.790,0.790,0.790]
            minor_road_bridge:
                filter: {is_bridge: yes}
                draw:
                    lines:
                        cap: butt
            labels-minor_road-z15:
                filter: { $zoom: 15 }
                draw:
                    text-blend-order:
                        priority: 26
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: [0.30,0.30,0.30]
                            size: 12px
                            stroke: { color: [1.00,1.00,1.00], width: 1 }
            labels-minor_road-z16:
                filter: { $zoom: 16 }
                draw:
                    text-blend-order:
                        priority: 26
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: [0.35,0.35,0.35]
                            size: 13px
                            stroke: { color: [1.00,1.00,1.00], width: 2 }
            labels-minor_road-z17:
                filter: { $zoom: { min: 17, max: 18 } }
                draw:
                    text-blend-order:
                        priority: 26
                        visible: *text_visible_minor_road_e
                        text_source: name
                        font:
                            fill: [0.25,0.25,0.25]
                            size: 13px
                            stroke: { color: [1.00,1.00,1.00], width: 2 }
            labels-minor_road2:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 26
                        visible: *text_visible_minor_road
                        text_source: name
                        font:
                            # needs a fill color?
                            fill: [0.15,0.15,0.15]
                            size: 14px
        service_road:
            filter: { kind: minor_road, highway: service }
            draw:
                lines:
                    # order: 3
                    color: [[12, [0.9,0.9,0.9]], [14, [0.9,0.9,0.9]], [15, [1.0,1.0,1.0]]]
                    # todo: consider starting at z13 with 0.5px
                    width: [[12, 0.65px], [13, 0.75px], [14, 0.85px], [15, 1.25px], [16, 2.0px], [18, 6m]]
                    outline:
                        color: [0.827,0.827,0.827]
                        width: [[15, 0px], [16, 0.5px], [17, 1.0px], [18, 1.75px]]
            in_park:
                filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        #todo: is the color necc here?
                        color: [0.976,0.976,0.976]
                        outline:
                            color: [[14, [0.800,0.851,0.847]], [15, [0.678,0.796,0.792]]]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [0.698,0.835,0.765]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [0.635,0.819,0.742]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: orange
                zoo:
                    filter: { landuse_kind: zoo }
                    draw:
                        lines:
                            outline:
                                color: pink
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: [0.737,0.816,0.753]
                            # todo: consider starting z13 with 0.25px
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        #todo: is this necc here?
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.806,0.763,0.717]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        #todo: is this necc here?
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.818,0.702,0.713]
                            width: [[13, 0px], [14, 0.5px], [17, 2.0px], [18, 4.0px]]
            labels-service_road:
                filter: { $zoom: { min: 17, min: 18 } }
                draw:
                    text-blend-order:
                        priority: 27
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            # need fill color?
                            fill: [0.25,0.25,0.25]
                            size: 11px
                            # stroke: { color: *text_stroke, width: 2 }
            labels-service_road2:
                filter: { $zoom: { min: 18 } }
                draw:
                    text-blend-order:
                        priority: 27
                        visible: *text_visible_service_road
                        text_source: name
                        font:
                            # need fill color?
                            fill: [0.15,0.15,0.15]
                            size: 12px
                            # stroke: { color: *service_road1, width: 4 }
        path:
            filter: { kind: path, not: { highway: [steps,track] } }
            draw:
                lines:
                    color: [[14, [0.97,0.97,0.97]],[16,[0.96,0.96,0.96]]]
                    order: 6
                    width: [[14, 0.6px], [16, 1px], [17, 2.5m]]
                    outline:
                        color: [0.799,0.799,0.799]
                        width: [[14, 0.0], [16, 0.5px], [18, 3px]]
            pedestrian:
                filter: { highway: pedestrian }
                draw:
                    lines:
                        color: [[13, [0.97,0.97,0.97]], [16,[0.96,0.96,0.96]]]
                        width: [[13, 1.5], [15, 1.5], [17, 3m]]
                        order: 7
                        outline:
                            color: [0.799,0.799,0.799]
                            width: [[17, 0.5], [18, 1]]
            bridge:
                filter: { is_bridge: yes }
                draw:
                    lines:
                        color: [[15, [1.0,1.0,1.0]], [18, [1.0,1.0,1.0]]]
                        width: [[15, 1.5px], [16, 4m], [17, 2m], [18, 2m]]
                        outline:
                            color: [[15,*path_bridge_casing2],[16,*path_bridge_casing1]]
                            width: [[15, 0px], [16, 1.0px], [18, 3px]]
            in_park:
                # should `forest` and `wood` be included?
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        color: [[14,white], [16,white], [17, [0.95,0.95,0.95]]]
                        outline:
                            color: [[16, [0.725,0.847,0.847]], [17, [0.663,0.847,0.843]]]
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
                golf_course:
                    filter: { landuse_kind: golf_course }
                    draw:
                        lines:
                            outline:
                                color: [0.698,0.835,0.765]
                nature_reserve:
                    filter: { landuse_kind: nature_reserve }
                    draw:
                        lines:
                            outline:
                                color: [0.635,0.819,0.742]
                conservation:
                    filter: { landuse_kind: conservation }
                    draw:
                        lines:
                            outline:
                                color: orange
            in_cemetery_garden:
                filter: { landuse_kind: [cemetery,garden] }
                draw:
                    lines:
                        outline:
                            color: [0.737,0.816,0.753]
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_zoo:
                filter: { landuse_kind: zoo }
                draw:
                    lines:
                        outline:
                            color: [0.708,0.881,0.831]
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    lines:
                        color: [[14, [0.97,0.97,0.97]], [16,[0.96,0.96,0.96]]]
                        outline:
                            color: [0.806,0.763,0.717]
                            # todo: consider starting 14 at 0px so z15 has a little width
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    lines:
                        color: [[14,[0.90,0.90,0.90]],[16,[0.96,0.96,0.96]]]
                        outline:
                            color: [0.847,0.788,0.796]
                            # todo: consider starting 14 at 0px so z15 has a little width
                            width: [[15, 0px], [16, 0.5px], [18, 3px]]
            labels-path:
                filter: { $zoom: { min: 17 } }
                draw:
                    text-blend-order:
                        priority: 28
                        visible: *text_visible_path
                        text_source: name
                        font:
                            # need a fill color?
                            fill: [0.25,0.25,0.25]
                            size: 12px
                            stroke: { color: [1.00,1.00,1.00], width: 1 }
        track:
            filter: { kind: path, highway: track }
            draw:
                lines:
                    color: [[13, *minor_road4], [15, *minor_road3]]
                    width: [[13, 0.5px], [14, 1.0px], [15, 1.0px], [16, 6m]]
                    #color: [[13,*minor_road4],[16,*minor_road3]]
                    #width: [[13, 1.0], [15, 1.5], [17, 3m]]
                    order: 6
                    cap: butt
                    join: round
                    outline:
                        color: *minor_casing1
                        width: [[14, 0px], [15, 0px], [16, 0.5px], [17, 1.0px], [18, 2.0px]]
            bridge:
                filter: { is_bridge: yes }
                draw:
                    lines:
                        cap: butt
                        width: [[15, 3.5], [17, 3m]]
                        outline:
                            color: [[15,*minor_casing2],[16,*minor_casing1]]
                            width: [[15, 0.5px], [16, 1.0px], [18, 2px]]
            in_park:
                filter: { landuse_kind: [park,national_park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    lines:
                        width: [[13, 0.5px], [14, 0.5px], [15, 1.0px], [16, 6m]]
                        outline:
                            color: [[16,*green1_r],[17,*major_casing1]]
                            width: [[14, 0px], [15, 0px], [16, 0.25px], [17, 0.5px], [18, 1.0px], [19, 2.0px]]
        steps:
            filter: { kind: path, highway: steps }
            draw:
                dashedline:
                    order: 23
                    color: [0.97,0.97,0.97]
                    width: [[14,0.6px],[16,2px],[17,4px],[18,5px],[19,8px],[20,10px]]
                    outline:
                        color: [0.867,0.867,0.867]
                        width: 2px
            in_park:
                filter: { landuse_kind: [park,nature_reserve,conservation,golf_course,garden] }
                draw:
                    dashedline:
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.867,0.867,0.867]
            in_university:
                filter: { landuse_kind: university }
                draw:
                    dashedline:
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.867,0.867,0.867]
            in_hospital:
                filter: { landuse_kind: hospital }
                draw:
                    dashedline:
                        color: [1.0,1.0,1.0]
                        outline:
                            color: [0.867,0.867,0.867]
            labels-steps:
                filter: { $zoom: { min: 17 } }
                draw:
                    text-blend-order:
                        priority: 29
                        visible: *text_visible_steps
                        text_source: name
                        font:
                            # need fill color?
                            size: 12px
                            stroke: { color: [1.00,1.00,1.00], width: 1 }
        airport-lines:
            filter: { kind: minor_road, aeroway: [runway,taxiway] }
            draw:
                lines:
                    order: 10
                    color: [[10,[0.4,0.4,0.4]],[11,[0.50,0.50,0.50]],[12,[0.7,0.7,0.7]],[13,[0.75,0.75,0.75]],[14,[0.95,0.95,0.95]]]
                    cap: butt
                    width: [[9,0px],[10,0.75px],[11,1.25px],[12,2px],[13,4px],[14,8px],[15,16px],[16,32px],[17,60m]]
                    # outline:
                    #     order: 10
                    #     color: [17,[0.95,0.95,0.95]]
                    #     width: [17,[60m]]
            # Features come in at zoom 9, but include mostly minor airports without POIs until z13
            early:
                filter: { $zoom: { max: 12 }, not: { landuse_kind: [aerodrome, runway, taxiway] } }
                draw:
                    lines:
                        visible: false
            not-round:
                filter: { $zoom: { min: 17 } }
                draw:
                    lines:
                        cap: butt
            taxiway:
                filter: { aeroway: taxiway }
                draw:
                    lines:
                        order: 9
                        color: [[13,[0.913,0.913,0.913]],[15,[0.923,0.923,0.923]],[16,[0.95,0.95,0.95]]]
                        width: [[13,1px],[14,2px],[15,3px],[16,7px],[17,20m]]
                        outline:
                            color: [0.778,0.778,0.797]
                early:
                    filter: { $zoom: { max: 13 } }
                    draw:
                        lines:
                            visible: false
        ferry:
            filter: { kind: ferry }
            draw:
                lines:
                    # order: 3
                    color: [0.702,0.843,0.933]
                    width: [[12, 0.5px], [14, 1.0px], [15, 1.0px], [16, 1.25px]]
                    outline:
                        width: 0px
        aerialway:
            filter: { kind: aerialway }
            draw:
                lines:
                    order: 20
                    interactive: true
                    color: '#444'
                    width: [[14, 0.5px], [15, 1.0px], [16, 2m]]
            gondola_cable_car:
                filter: { kind: [gondola, cable_car] }
                draw:
                    lines:
                        color: black
                        width: [[12, 2.0px], [13, 1.75px], [14, 2.25px], [15, 3.0px], [16, 4m]]
            chair_lift:
                filter: { kind: chair_lift }
                draw:
                    lines:
                        color: '#333'
                        width: [[13, 0.75px], [14, 1.5px], [15, 2.5px], [16, 3m]]
            aerialway-labels:
                filter: { $zoom: { min: 14 } }
                draw:
                    text-blend-order:
                        priority: 29
                        visible: *text_visible_steps
                        text_source: name
                        font:
                            fill: *text_fill
                            size: 12px
                            stroke: { color: *text_stroke_park, width: 4 }
                minor:
                    filter: { not: { aerialway: [gondola, cable_car, chair_lift] }, $zoom: { max: 17 } }
                    draw:
                        text-blend-order:
                            visible: false
        z-order:
            #filter: { $zoom: {min: 12} }
            draw:
                lines:
                    # let roads sort themselves past zoom 14
                    order: function() { return (6 + feature.sort_key) || 6; }
                    # but give them all the same outline
                    outline:
                        order: 21 # 15 is the starting aboveground level, plus 6

            bridges-tunnels:
                filter: { any: [is_bridge: yes, is_tunnel: yes] }
                draw:
                    lines:
                        outline:
                            # except bridges and tunnels, their outlines should also self-sort
                            order: function() { return (6 + feature.sort_key) || 6; }

    city_walls:
        data: { source: osm, layer: boundaries }
        filter: { kind: city_wall }
        draw:
            lines:
                interactive: true
                order: 8
                color: *city_wall
                width: [[12, 0.75px], [13, 1.0px], [14, 1.2px], [15, 2.0px], [16, 2.5px], [19, 6m]]
    retaining_wall:
        data: { source: osm, layer: boundaries }
        filter: { kind: retaining_wall }
        draw:
            lines:
                interactive: true
                order: 8
                color: *retaining_wall
                width: [[14, 0.5px], [15, 1.0px], [16, 1.5px], [17, 2.0px], [19, 4m]]

    buildings:
        data: { source: osm, layer: buildings }

        filter:
            not: { location: underground }

        # set default footprint and extrusion draw properties, but don't draw by default (rules below will turn visibility on)
        draw:
            polygons:
                visible: false
                order: 50
                color: *building2
            lines:
                visible: false
                style: lines
                order: 51
                color: [[14,[0.70,0.70,0.70]],[17,[0.65, 0.65, 0.65]]]
                width: [[14, 0.6px], [15, 0.65px], [16,0.75px], [18, 1.25px]]

        # turn interactive feature selection on for buildings with names
        interactive:
            filter: { name: true }
            draw: { polygons: { interactive: true } }

        # building footprints, pre-extrusion
        footprints:
            filter:
                $zoom: { max: 18 }
                any:
                    # show footprints for buildings at least one zoom level before they will be extruded
                    - { $zoom: [13], area: { min: 50000 } }
                    - { $zoom: [13], height: { min: 250 } }
                    - { $zoom: [13], volume: { min: 200000 } }
                    - { $zoom: [14], area: { min: 5000 } }
                    - { $zoom: [14], height: { min: 190 } }
                    - { $zoom: [14], volume: { min: 150000 } }
                    - { $zoom: [15], height: { min: 100 } }
                    - { $zoom: [15], area: { min: 500 } }
                    - { $zoom: [15], volume: { min: 100000 } }
                    - { $zoom: [16], area: { min: 100 } }
                    - { $zoom: [16], volume: { min: 50000 } }
                    - { $zoom: { min: 17 } }
            draw:
                polygons:
                    visible: true
                lines:
                    visible: true

        # 3d buildings
        extrude:
            filter:
                any:
                    - { $zoom: [15], height: { min: 190 } }
                    - { $zoom: [15], area: { min: 5000 } }
                    - { $zoom: [15], volume: { min: 100000 } }
                    - { $zoom: [16], height: { min: 100 } }
                    - { $zoom: [16], area: { min: 3500 } }
                    - { $zoom: [16], volume: { min: 50000 } }
                    - { $zoom: [17], area: { min: 500 } }
                    - { $zoom: [17], volume: { min: 15000 } }
                    - { $zoom: { min: 18 } }
            draw:
                polygons:
                    visible: true
                    style: building-grid
                    extrude: function() { return feature.height || 20; }
                    color: [0.892,0.880,0.878]
                lines:
                    visible: true
                    style: building-lines
                    extrude: function() { return feature.height || 20; }

        # landuse-specific rules
        in_park:
            filter: { landuse_kind: [park,forest,nature_reserve,conservation,golf_course,garden] }
            draw:
                polygons:
                    color: [0.864,0.910,0.905]

            # golf_course:
            #     filter: { landuse_kind: golf_course }
            #     draw:
            #         polygons:
            #             color: *building2
            # nature_reserve:
            #     filter: { landuse_kind: nature_reserve }
            #     draw:
            #         polygons:
            #             color: *building2
            # conservation:
            #     filter: { landuse_kind: conservation }
            #     draw:
            #         polygons:
            #             color: *building2
            # zoo:
            #     filter: { landuse_kind: zoo }
            #     draw:
            #         polygons:
            #             color: *building2
        in_university:
            filter: { landuse_kind: [university,school] }
            draw:
                polygons:
                    color: [0.950,0.917,0.883]
                lines:
                    outline:
                        color: *brown1_bo
        in_hospital:
            filter: { landuse_kind: hospital }
            draw:
                polygons:
                    color: [0.976,0.908,0.913]
        in_retail:
           filter: { landuse_kind: retail }
           draw:
                polygons:
                    color: [0.945, 0.898, 0.878]

    buildings-labels:
        data: { source: osm, layer: buildings }
        filter:
            all:
                - { $zoom: { min: 16 } }
                - $geometry: point
                - not: { location: underground }
                - kind: [false,building]
            any:
                - { $zoom: [16], area: { min: 5000 }, name: true }
                - { $zoom: [16], area: { min: 5000 }, kind: true }
                - { $zoom: [16], area: { min: 10000 }, landuse_kind: true }
                - { $zoom: [16], volume: { min: 50000 }, name: true }
                - { $zoom: [17], area: { min: 3000 }, name: true }
                - { $zoom: [18], area: { min: 1000 }, name: true }
                - { $zoom: [19], area: { min: 200 }, name: true }
                - { $zoom: { min: 20 }, name: true }
        draw:
            text-blend-order:
                interactive: true
                order: 7
                font:
                    fill: '#666'
                    family: *text_font_family
                    style: italic
                    size: 11px
                    stroke: { color: *text_stroke_address, width: 1 }
        building_labels-z15:
            filter: { $zoom: [15,16,17] }
            draw: { text-blend-order: { font: { size: 12px, stroke: { width: 2 } } } }
        building_labels-z18:
            filter: { $zoom: [18,19] }
            draw: { text-blend-order: { font: { size: 12px, weight: 600, stroke: { width: 3 } } } }
        building_labels-z20-up:
            filter: { $zoom: { min: 20 } }
            draw: { text-blend-order: { font: { size: 14px, weight: 600, stroke: { width: 3 }  } } }
        # Hack for no text wrap in Tangram
        building-labels-z16:
            filter: function() { if( $zoom == 16 && feature.name.length > 10 ) { return true; } else { return false; } }
            draw:
                text-blend-order:
                    visible: false
        building-labels-z17:
            filter: function() { if( $zoom == 17 && feature.name.length > 20 ) { return true; } else { return false; } }
            draw:
                text-blend-order:
                    visible: false
        building-labels-z20+:
            filter: { $zoom: { min: 20 } }
            draw:
                text-blend-order:
                    text_source: function() { if( feature.addr_housenumber ) { return feature.name + '\n' + feature.addr_housenumber; } else { return feature.name; } }
    address-labels:
        data: { source: osm, layer: buildings }
        filter:
            $zoom: { min: 20 }
            any:
                - kind: address
                - { label_position: yes, addr_housenumber: true, name: false }
        draw:
            text-blend-order:
                interactive: true
                order: 7
                text_source: addr_housenumber
                font:
                    fill: *text_fill_address
                    family: *text_font_family
                    style: italic
                    size: 10px
                    stroke: { color: *text_stroke_address, width: 4 }

    boundaries:
        data: { source: osm, layer: boundaries }
        # country subdivisions (states, provinces)
        draw:
            lines:
                interactive: true
                order: 11
#                color: red
#                width: [[9, 1px], [14, 2px], [16, 3px], [17, 8m]]
        country:
            filter:
                any:
                    - type: country
                    - kind: nation
                    - admin_level: 2
            draw:
                lines:
                    interactive: true
                    order: 13
                    color: *country_boundary
                    width: [[1, 0.5px], [2, 1.0px], [4, 1.5px], [9, 2.5px], [14, 3.5px], [16, 4.5px], [17, 14m]]
            water:
                filter: { maritime: yes }
                draw:
                    lines:
                        order: 9
                        color: blue
        region:
            filter:
                any:
                    - type: state
                    # territorial here is probably a hack
                    - kind: [state, department, region, provincial, territorial]
                    - admin_level: 4
            draw:
                lines:
                    interactive: true
                    order: 12
                    color: *region_boundary
                    width: [[0, 0.5px], [2, 1.0px], [5, 1.25px], [6, 1.5px], [7, 1.75px], [9, 3.5px], [14, 5.5px], [16, 6.5px], [17, 16m]]
            water:
                filter: { maritime_boundary: yes }
                draw:
                    lines:
                        visible: false
            early:
                filter: { scalerank: [0,3,4,5,6,7,8,9,10], $zoom: { max: 8 } }
                draw:
                    lines:
                        visible: false

#        subregions:
#            filter: { kind: county, $zoom: { min: 10 } }
#            draw:
#                lines:
#                    interactive: true
#                    order: 6
#                    color: *subregion_boundary
#                    width: [[9, 1px], [14, 2px], [16, 3px], [17, 8m]]

    places:
        data: { source: osm, layer: places }
        filter: { not: { kind: [ocean, sea] } }
        draw:
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                font:
                    family: *text_font_family
                    # weight: 500
                    fill: *text_fill

        continent:
            filter: { name: true, kind: [continent], $zoom: {max: 5} }
            draw:
                text-blend-order:
                    visible: *text_visible_continent
                    font:
                        size: 14px
                        weight: 700
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase

        country-z2:
            filter:
                all:
                    - kind: [country]
                    - $zoom: [2]
                    - name: ["United States of America","Brasil","中华人民共和国","Россия","Canada","Kalaallit Nunaat","Ísland","Australia","India","日本","Guam","Indonesia","South Africa","مصر","Nigeria","Kenya"]
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: [0.30,0.30,0.30]
                        weight: 400
                        size: 10px
                        transform: uppercase
        country-z3:
            filter: { name: true, population: true, kind: [country], $zoom: [3] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        fill: [0.20,0.20,0.20]
                        size: 11px
                        weight: 600
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones:
                # US, Brazil, China, Russia, Canada, Greenland, Iceland, Australia, India, Japan, Guam, Indonesia, South Africa, Egypt, Nigeria, Kenya
                filter: { not: { name: ["United States of America","Brasil","中华人民共和国","Россия","Canada","Kalaallit Nunaat","Ísland","Australia","India","日本","Guam","Indonesia","South Africa","مصر","Nigeria","Kenya"] }, $zoom: {min: 3, max: 4} }
                draw:
                    text-blend-order:
                        visible: false
        country-z4:
            filter: { name: true, population: true, kind: [country], $zoom: [4] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 12px
                        weight: 600
                        fill: [0.40,0.40,0.40]
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones-z4:
                filter: { name: [Nederland,Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,Crna Gora,Македонија,The Gambia,Burundi,Swaziland,الإمارات العربية المتحدة,العراق,Singapore,El Salvador,Belize,Trinidad and Tobago, Saint Lucia, Montserrat,Anguilla,República Dominicana,Bahamas,British Virgin Islands,Antigua and Barbuda,Grenada,Sint Maarten,Saint Kitts and Nevis,Cayman Islands,België - Belgique - Belgien], $zoom: {min: 4, max: 5} }
                draw:
                    text-blend-order:
                        visible: false
        country-z5:
            filter:
                all:
                    - name: true
                    - population: true
                    - kind: [country]
                    - $zoom: [5]
                any:
                    - { population: { min: 5000000 } }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 13px
                        weight: 400
                        fill: [0.25,0.25,0.25]
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            early-ones-z5:
                filter: { name: [Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,El Salvador,Belize,België - Belgique - Belgien], $zoom: {min: 5, max: 6} }
                draw:
                    text-blend-order:
                        visible: false
        country-z6:
            # South Ossetia and Abkhazia aren't countries (they are disputed areas)
            filter: { name: true, kind: [country], $zoom: [6] }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 14px
                        weight: 600
                        fill: [0.25,0.25,0.25]
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
            small-ones-z6:
                filter: { name: [Luxembourg,Liechtenstein,San Marino,Civitatis Vaticanæ,België - Belgique - Belgien,Хуссар Ирыстон,Аҧсны - Абхазия], $zoom: {min: 6, max: 7} }
                draw:
                    text-blend-order:
                        visible: false

        country-z7:
            # South Ossetia and Abkhazia aren't countries (they are disputed areas)
            filter: { name: true, kind: [country], $zoom: { min: 7, max: 9 } }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: function() { return feature["name:en"] || feature["name"]; }
                    font:
                        size: 16px
                        weight: 600
                        fill: [0.25,0.25,0.25]
                        # stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
            small-ones-z7:
                filter: { name: [Liechtenstein,San Marino,Civitatis Vaticanæ,Хуссар Ирыстон,Аҧсны - Абхазия], $zoom: {min: 7, max: 8} }
                draw:
                    text-blend-order:
                        visible: false

        region-z4:
            filter: { name: true, kind: [state], $zoom: [4], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 3
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 10px
                        weight: 300
                        fill: [0.3,0.3,0.3]

        region-z5:
            filter: { name: true, kind: [state], $zoom: [5], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 13px
                        weight: 300
                        fill: [0.3,0.3,0.3]

        region-z6:
            filter: { name: true, kind: [state], $zoom: [6], not: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"] } }
            draw:
                text-blend-order:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: 'name:short'
                    font:
                        size: 15px
                        weight: 300
                        fill: [0.4,0.4,0.4]

        region:
            filter: { name: true, kind: [state], $zoom: {min: 7, max: 9} }
            draw:
                text-blend-order:
                    priority: 4
                    visible: *text_visible_admin
                    text_source: function() { if(feature["name:short"]) { return feature["name"]; } else { return ""; } }
                    font:
                        size: 14px
                        weight: 300
                        fill: [0.3,0.3,0.3]
                        #stroke: { color: *text_stroke, width: 4 }
                        transform: uppercase
    #            icons:
    #                size: [[13, 12px], [15, 18px]]
    #                interactive: true
    #                sprite: *townspot_sprite
            pesky:
                filter: { name: ["Western Cape","Eastern Cape","Northern Cape","North West","Limpopo","KwaZulu-Natal","Hamburg","Freie und Hansestadt Hamburg","Neuchâtel","Nordrhein-Westfalen","Haute-Normandie","Baden-Württemberg","Bayern","Sachsen-Anhalt","Berlin","Mecklenburg-Vorpommern","Schleswig-Holstein","Brandenburg","Niedersachsen","Saarland","Thüringen","Hessen","Sachsen"], $zoom: {min: 7, max: 8} }
                draw:
                    text-blend-order:
                        visible: false
            small-ones:
                filter: { name: ["Delaware","New Jersey","Connecticut","Rhode Island","Massachusetts","New Hampshire","Vermont"], $zoom: {min: 7, max: 8} }
                draw:
                    text-blend-order:
                        text_source: function() { return feature["name:abbreviation"] || feature["name"]; }
                        font: { transform: uppercase }

        populated-places:
            draw:
                icons:
                    priority: 5
                text-blend-order:
                    anchor: bottom
                    priority: 6

            populated-places-natural-earth-z2:
                filter: { name: true, source: naturalearthdata.com, $zoom: [2], scalerank: 0 }
                draw:
                    text-blend-order:
                        interactive: true
                        visible: *text_visible_populated_places
                        offset: [0, 1px] # half icon size
                        font:
                            size: 10px
                            fill: *text_fill
                            # stroke: { color: *text_stroke, width: 4 }
                    icons:
                        size: 7px
                        interactive: true
                        sprite: townspot-xs-rev

            populated-places-natural-earth-z3:
                filter: { name: true, source: naturalearthdata.com, $zoom: [3] }
                z3places-1:
                    filter: { scalerank: [0] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                                fill: *text_fill
                                # stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            interactive: true
                            sprite: townspot-xs-rev
                z3places-2:
                    filter: { scalerank: [1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 9px
                                fill: *text_fill
                                # stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 7px
                            interactive: true
                            sprite: townspot-xs-rev

            populated-places-natural-earth-z4:
                filter: { name: true, source: naturalearthdata.com, $zoom: [4] }
                z4places-1:
                    filter: { scalerank: [0] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 13px
                                fill: *text_fill
                                # stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev

                z4places-2:
                    filter: { scalerank: [1,2] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 10px
                                fill: *text_fill
                                # stroke: { color: *text_stroke, width: 4 }
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev

            populated-places-natural-earth-z5:
                filter: { name: true, source: naturalearthdata.com, $zoom: [5] }
                z5places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 3px] # half icon size
                            font:
                                size: 13px
                        icons:
                            size: 13px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 13px
                            icons:
                                sprite: capital-m

                z5places-2:
                    filter: { scalerank: [2] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 13px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 11px

                z5places-3:
                    filter: { scalerank: [3,4] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 9px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 11px
                            icons:
                                    sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 9px

            populated-places-natural-earth-z6:
                filter: { name: true, source: naturalearthdata.com, $zoom: [6] }
                z6places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 3px] # half icon size
                            font:
                                fill: *text_fill
                                size: 15px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 15px
                            icons:
                                sprite: capital-m

                z6places-2:
                    filter: { scalerank: [2,3,4] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                fill: *text_fill
                                size: 12px
                        icons:
                            size: 8px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 15px
                            icons:
                                size: 10px
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px

                z6places-3:
                    filter: { scalerank: [5,6] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 10px
                        icons:
                            size: 7px
                            interactive: true
                            sprite: townspot-xs-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px
                            icons:
                                size: 5px
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 10px

            populated-places-natural-earth-z7:
                filter: { name: true, source: naturalearthdata.com, $zoom: [7] }
                z7places-1:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                fill: *text_fill
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z7places-2:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                fill: *text_fill
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px

                z7places-3:
                    filter: { scalerank: [6,7] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px

            populated-places-osm-z8:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [8]

                z8places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                z8places-2:
                    filter:
                        any:
                            - { population: { min: 150000, max: 999999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 13px

                z8places-3:
                    filter:
                        any:
                            - { population: { min: 85000, max: 149999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px

                z8places-4:
                    filter:
                        any:
                            - { population: { min: 50000, max: 84999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                fill: [0.30,0.30,0.30]
                                size: 8px
                        icons:
                            size: 8px
                            interactive: true
                            sprite: townspot-xs-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 10px

            populated-places-natural-earth-z8-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [8], population: { max: 50000 } }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z8places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z8places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px

                z8places-3-ne:
                    filter: { scalerank: [6,7] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px

            populated-places-osm-z9:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [9]

                z9places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 17px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 17px
                            icons:
                                sprite: capital-m

                z9places-2:
                    filter:
                        any:
                            - { population: { min: 150000, max: 999999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 17px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 15px

                z9places-3:
                    filter:
                        any:
                            - { population: { min: 85000, max: 149999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 15px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 13px

                z9places-4:
                    filter:
                        any:
                            - { population: { min: 50000, max: 84999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                fill: [0.30,0.30,0.30]
                                size: 9px
                        icons:
                            size: 8px
                            interactive: true
                            sprite: townspot-xs-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 13px
                            icons:
                                    sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 11px

            populated-places-natural-earth-z9-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [9], population: { max: 50000 } }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z9places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z9places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px

                z9places-3-ne:
                    filter: { scalerank: [6,7,8,9] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                            icons:
                                    sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px

            populated-places-osm-z10:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [10]

                z10places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 17px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev

                z10places-2:
                    filter:
                        any:
                            - { population: { min: 150000, max: 999999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev

                z10places-3:
                    filter:
                        any:
                            - { population: { min: 50000, max: 149999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                fill: [0.25,0.25,0.25]
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev

                z10places-4:
                    filter:
                        any:
                            - { population: { min: 35000, max: 49999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                fill: [0.35,0.35,0.35]
                                size: 9px
                        icons:
                            size: 8px
                            interactive: true
                            sprite: townspot-xs-rev

            populated-places-natural-earth-z10-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [10], population: { max: 35000 } }
                draw: { text-blend-order: { font: { fill: *text_fill } } }
                z10places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 2px] # half icon size
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z10places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px

                z10places-3-ne:
                    filter: { scalerank: [6,7,8,9,10] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            offset: [0, 1px] # half icon size
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                            icons:
                                    sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px

            populated-places-osm-z11:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [11]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center

                z11places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }

                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 18px

                z11places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 999999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 14px


                z11places-3:
                    filter:
                        any:
                        - { population: { min: 10000, max: 49999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 10px

            populated-places-natural-earth-z11-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [11], population: { max: 10000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            fill: *text_fill
                z11places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z11places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px

                z11places-3-ne:
                    filter: { scalerank: [6,7,8,9,10,11] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px

            populated-places-osm-z12:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [12]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center

                z12places-1:
                    filter:
                        any:
                            - { population: { min: 1000000 } }

                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 18px

                z12places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 999999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 14px

                z12places-3:
                    filter:
                        any:
                        - { population: { min: 7000, max: 49999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px

            populated-places-natural-earth-z12-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [12], population: { max: 7000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            fill: *text_fill

                z12places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 16px
                        icons:
                            size: 14px
                            interactive: true
                            sprite: townspot-m-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m

                z12places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px
                        icons:
                            size: 11px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 16px
                            icons:
                                sprite: capital-m
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px

                z12places-3-ne:
                    filter: { scalerank: [6,7,8,9,10,11,12] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 11px
                        icons:
                            size: 9px
                            interactive: true
                            sprite: townspot-s-rev
                    capital:
                        filter: { capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 14px
                            icons:
                                sprite: capital-s
                    state_capital:
                        filter: { state_capital: yes }
                        draw:
                            text-blend-order:
                                font:
                                    size: 12px

            populated-places-osm-z13-z14:
                filter:
                    all:
                        - source: openstreetmap
                        - name: true
                        - population: true
                        - not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }
                        - $zoom: [13,14]
                        - kind: [city,town]
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            weight: 600
                            fill: *text_fill
                z14:
                    filter:
                        $zoom: [14]
                    draw:
                        text-blend-order:
                            font:
                                weight: 600

                z13places-1:
                    filter:
                        any:
                            - { population: { min: 200000 } }
                    draw:
                        text-blend-order:
                            visible: false

                z13places-2:
                    filter:
                        any:
                            - { population: { min: 50000, max: 199999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 14px

                z13places-3:
                    filter:
                        any:
                        - { population: { min: 7000, max: 49999 } }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 12px

            populated-places-natural-earth-z13-z14-backfill:
                filter: { name: true, source: naturalearthdata.com, $zoom: [13,14], population: { max: 7000 } }
                draw:
                    text-blend-order:
                        anchor: center
                        font:
                            fill: *text_fill
                            weight: 400
                            fill: *text_fill

                z13places-1-ne:
                    filter: { scalerank: [0,1] }
                    draw:
                        text-blend-order:
                            visible: false

                z13places-2-ne:
                    filter: { scalerank: [2,3,4,5] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 13px

                z13places-3-ne:
                    filter: { scalerank: [6,7,8,9,10,11,12] }
                    draw:
                        text-blend-order:
                            interactive: true
                            visible: *text_visible_populated_places
                            font:
                                size: 12px

            # populated-places-osm:
            #     filter: { name: true, source: openstreetmap, not: { kind: [country, county, state, island, neighbourhood, suburb, quarter] }, $zoom: {min: 12} }
            #     draw:
            #         text-blend-order:
            #             priority: 1
            #             interactive: true
            #             visible: *text_visible_populated_places
            #             font:
            #                 size: 15px
            #                 # stroke: { color: *text_stroke, width: 4 }

            #     # nix major cities under z15
            #     major-places:
            #         filter: { kind: [city], $zoom: { min: 13, max: 15 } }
            #         visible: false
            #         draw:
            #             text-blend-order:
            #                 font:
            #                     size: 13px
            #     major-places:
            #         filter: { kind: [city], $zoom: { min: 15 } }
            #         visible: false
            #         draw:
            #             text-blend-order:
            #                 visible: false
            #                 font:
            #                     size: 14px
            #     medium-places-early:
            #         filter: { kind: [town], $zoom: { max: 11 } }
            #         visible: false
            #     medium-places-late:
            #         filter: { kind: [town], $zoom: { min: 12 } }
            #         draw:
            #             text-blend-order:
            #                 font:
            #                     size: 11px
            #     # nix podunk burgs under z15
            #     minor-places-village:
            #         filter: { kind: [village], $zoom: { max: 12 } }
            #         visible: false
            #     # mobile home parks, really?
            #     minor-places-hamlet:
            #         filter: { kind: [hamlet], $zoom: { max: 16 } }
            #         visible: false

            neighborhood-z11:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [11]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11]
                            - max_zoom: { min: 12 }
                            - is_landuse_aoi: false
                            #- kind_tile_rank: { max: 6 }
                draw:
                    text-blend-order:
                        priority: 7
                        visible: *text_visible_admin
                        font:
                            size: 11px
                            weight: 400
                            fill: *text_fill
                            transform: uppercase
                            stroke: { color: *text_stroke, width: 4 }
            neighborhood-z12:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [12]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12]
                            - max_zoom: { min: 13 }
                            - is_landuse_aoi: false
                            #- kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        visible: *text_visible_admin
                        font:
                            size: 10px
                            weight: 400
                            fill: [0.15,0.15,0.15]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 2 }
            neighborhood-z13:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [13]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13]
                            - max_zoom: { min: 14 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        text_wrap: 10
                        visible: *text_visible_neighbourhoods_e
                        font:
                            size: 10px
                            weight: 400
                            fill: [0.35,0.35,0.35]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 2 }
            neighborhood-z14:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [14]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14]
                            - max_zoom: { min: 15 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 12px
                            weight: 400
                            fill: [0.35,0.35,0.35]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 3 }
            neighborhood-z15:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [15]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14,15]
                            - max_zoom: { min: 16 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        text_wrap: 12
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 16px
                            weight: 300
                            fill: [0.20,0.20,0.20]
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 3 }

            neighborhood-z16:
                filter:
                    all:
                        - name: true
                        - kind: [macrohood, neighbourhood]
                        - $zoom: [16]
                    any:
                        - source: openstreetmap
                        - source: whosonfirst
                          all:
                            - min_zoom: [11,12,13,14,15,16]
                            - max_zoom: { min: 17 }
                            - is_landuse_aoi: false
                            - kind_tile_rank: { max: 8 }
                draw:
                    text-blend-order:
                        priority: 7
                        visible: *text_visible_neighbourhoods
                        font:
                            size: 16px
                            weight: 300
                            fill: *text_fill
                            transform: uppercase
                            # stroke: { color: *text_stroke, width: 3 }


    pois_and_landuse_labels:
        data: { source: osm, layer: [pois,landuse,buildings] }
        visible: *label_visible_poi_landuse
        filter:
            not: { kind: [building,farm,peak,tree,gate,address] }
            any:
                - area: false
                  all:
                      - $zoom: { min: 12 }
                - area: true
                  all:
                      - $geometry: point
                      - kind: true
        draw:
            icons:
                size: [[13, 12px], [16, 16px], [19, 20px]]
                interactive: true
                visible: false
                priority: 15
            text-blend-order:
                visible: false    # labels are enabled by each layer below
                move_into_tile: false # preserves text alignment w/icons in JS
                anchor: bottom
                offset: [[13, [0, 6px]], [16, [0, 8px]], [19, [0, 10px]]] # offset tracks alongside icon size (half icon height)
                interactive: true
                priority: 16
                font:
                    family: *text_font_family
                    weight: 400
                    fill: [0.20,0.20,0.20]
                    size: 10px
                    stroke: { color: *text_stroke, width: 1 }
        poi_labels-z14:
            filter: { $zoom: [14] }
            draw: { text-blend-order: { font: { size: 11px } } }
        poi_labels-z15:
            filter: { $zoom: [15,16,17] }
            draw: { text-blend-order: { font: { size: 12px, stroke: { width: 2 } } } }
        poi_labels-z18:
            filter: { $zoom: [18,19] }
            draw: { text-blend-order: { font: { size: 12px, weight: 600, stroke: { width: 3 } } } }
        poi_labels-z20-up:
            filter: { $zoom: { min: 20 } }
            draw: { text-blend-order: { font: { size: 14px, weight: 600, stroke: { width: 3 }  } } }
        no-name:
            filter: { name: false }
            sports-pitch:
                filter: { kind: [grass, pitch], $geometry: point, area: true, $zoom: { min: 17 } }
                draw:
                    icons:
                        sprite: function() { return feature.sport }
                        visible: *icon_visible_poi_landuse_e
                        priority: 19
                baseball:
                    filter: { sport: baseball }
                    draw: { icons: { sprite: baseball-field } }
                basketball:
                    filter: { sport: basketball }
                    draw: { icons: { sprite: basketball-court } }
                football:
                    filter: { sport: football }
                    draw: { icons: { sprite: football-stadium } }
                hockey:
                    filter: { sport: hockey-field }
                    draw: { icons: { sprite: hockey-field } }
                soccer:
                    filter: { sport: soccer }
                    draw: { icons: { sprite: soccer-field } }
                tennis:
                    filter: { sport: tennis }
                    draw: { icons: { sprite: tennis } }
            traffic-signal:
                filter: { kind: traffic_signals, $zoom: { min: 18 } }
                draw:   { icons: { sprite: traffic-signal, visible: *icon_visible_poi_landuse_e } }
            bicycle-parking:
                filter: { kind: [bicycle_parking], $zoom: { min: 19 } }
                draw:   { icons: { sprite: bicycle-parking, visible: *icon_visible_poi_landuse_e } }
        has-name:
            filter: { name: true }
            # match 1:1 correlations between data and sprite name
            direct-match:
                filter: { area: false }
                draw:
                    icons:
                        # sprite_source: kind
                        sprite: function() { return feature.kind; }
                        visible: *icon_visible_poi_landuse
                        interactive: true

            # add generic icon at high zoom, if direct match fails
            generic-icons:
                filter: { $zoom: { min: 18 }, area: false }
                draw:
                    icons:
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        interactive: true
                        priority: 17

            # add generic icon at high zoom
            default-label-names:
                filter: { $zoom: { min: 13 }, area: false }
                draw:
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        interactive: true
                        priority: 18

            landuse-labels-green-areas-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [national_park, "park or protected land"]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [4],  area: { min: 3000000000 } }
                        - { $zoom: [5],  area: { min: 3000000000 } }
                        - { $zoom: [6],  area: { min: 500000000 } }
                        - { $zoom: [7,8,9],  area: { min: 100000000 } }
                        - { $zoom: [10], area: { min: 50000000 } }
                        - { $zoom: [11], area: { min: 25000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 200000 } }
                        - { $zoom: [14], area: { min: 50000 } }
                        - { $zoom: { min: 15 } }
                national-park:
                    # yosemite national park, joshua tree national park
                    filter: function() { return feature.name && feature.name.indexOf("National Park") > -1; }
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            interactive: true
                            priority: 11
                        text-blend-order:
                            visible: *text_visible_poi_landuse
                            interactive: true
                            priority: 12
                            font:
                                fill: [0.200,0.409,0.398] #*text_fill_park
                                style: italic
                                # stroke: { color: [0.870,0.870,0.870], width: 3px }
                    natl-park-labels-z4-z6:
                        filter: { $zoom: [4,5,6] }
                        draw:
                            icons:
                                visible: false
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    natl-park-labels-z7:
                        filter: { $zoom: [7] }
                        draw:
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    natl-park-labels-z8:
                        filter: { $zoom: [8,9] }
                        draw:
                            text-blend-order: { font: { size: 11px, stroke: { width: 2px } } }
                    natl-park-labels-z10:
                        filter: { $zoom: {min: 10, max: 14 } }
                        draw:
                            text-blend-order: { font: { size: 12px } }

            landuse-labels-green-areas-not-national-park:
                filter:
                    all:
                        - area: true
                        - $geometry: point
                        - kind: [park, national_park, "park or protected land",conservation, protected_area, nature_reserve, forest, grass]
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5],    area: { min: 10000000000 } }
                        - { $zoom: [6,7],  area: { min: 5000000000 } }
                        - { $zoom: [8],    area: { min: 1000000000 } }
                        - { $zoom: [9],    area: { min: 100000000 } }
                        - { $zoom: [10],   area: { min: 50000000 } }
                        - { $zoom: [11],   area: { min: 25000000 } }
                        - { $zoom: [12],   area: { min: 5000000 } }
                        - { $zoom: [13],   area: { min: 200000 } }
                        - { $zoom: [14],   area: { min: 50000 } }
                        - { $zoom: [15],   area: { min: 10000 } }
                        - { $zoom: [16],   area: { min: 1000 } }
                        - { $zoom: { min: 17 } }
                not-national-park:
                    filter: function() { return !( feature.name.indexOf("National Park") > -1 ); }
                    draw:
                        icons:
                            visible: *icon_visible_landuse_green
                            sprite: park
                            interactive: true
                            priority: 11
                        text-blend-order:
                            visible: *text_visible_landuse_green
                            interactive: true
                            priority: 12
                            font:
                                fill: [0.181,0.370,0.361]
#                                size: 12px
#                                weight: 400
                                style: italic
                                # stroke: { color: [0.870,0.870,0.870], width: 2 }
                    green-areas-z6:
                        # mojave national preserve
                        filter: { $zoom: [6] }
                        draw:
                            icons: { visible: false }
                            text-blend-order: { font: { size: 10px, stroke: { width: 2px } } }
                    green-areas-z7:
                        filter: { $zoom: [7] }
                        draw:
                            icons: { visible: false }
                            text-blend-order: { font: { size: 10px } }
                    green-areas-z8-z9:
                        filter: { $zoom: { min: 8, max: 14 } }
                        draw:
                            text-blend-order: { font: { size: 11px } }
                    wilderness-areas-early:
                       filter: function() { return $zoom < 10 && feature.name && (feature.name.indexOf("Wilderness") > -1 || feature.name.indexOf("BLM") > -1) }
                       draw:
                           text-blend-order: { visible: false }
                           icons: { visible: false }
                    early-not-national-park:
                        filter: { not: { kind: national_park }, $zoom: { max: 6 } }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    not-national-park:
                        filter: function() { return feature.name && feature.name.indexOf("Park") > -1 }
                        # draw:
                        #     icons:
                        #         sprite: park
                        early:
                            filter: { $zoom: { max: 8 } }
                            draw:
                                text-blend-order: { visible: false }
                                icons: { visible: false }
                    forest:
                        filter: function() { return $zoom < 8 && ((feature.name && feature.name.indexOf("Forest") > -1) || feature.protect_class >=6) }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    hide-till-later:
                        filter: { kind: [grass], $zoom: { max: 16 } }
                        draw:
                            text-blend-order: { visible: false }
                            icons: { visible: false }
                    only-text-later:
                        filter: { kind: [grass], $zoom: { min: 16 } }
                        draw:
                            text-blend-order: { font: { style: italic } }
                            icons: { visible: false }
            airport:
                filter:
                    all:
                        - kind: [airport, aerodrome]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],  area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 10000000 } }
                        - { $zoom: [11], area: { min: 5000000 } }
                        - { $zoom: [12], area: { min: 5000000 } }
                        - { $zoom: [13], area: { min: 500000 } }
                        - { $zoom: [14], area: { min: 20000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 10000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                draw:
                    icons:
                        sprite: airport
                        visible: *icon_visible_landuse_green
                        interactive: true
                        priority: 12
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        interactive: true
                        priority: 11
                        font:
                            fill: [0.20,0.20,0.20] # *text_fill
                            #size: 11px
                            stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 12 } }
                    draw: { text-blend-order: { visible: false } }
                early2:
                    filter: { $zoom: { min: 12, max: 14 } }
                    draw: { text-blend-order: { size: 11px } }
            university:
                filter:
                    all:
                        - kind: [university,college]
                        - area: true
                        - $geometry: point
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [9],   area: { min: 10000000 } }
                        - { $zoom: [10], area: { min: 5000000 } }
                        - { $zoom: [11], area: { min: 2000000 } }
                        - { $zoom: [12], area: { min: 500000 } }
                        - { $zoom: [13], area: { min: 100000 } }
                        - { $zoom: [14], area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15], area: { min: 40000 } }
                        - { $zoom: [16], area: { min: 5000 } }
                        - { $zoom: [17], area: { min: 2000 } }
                        - { $zoom: { min: 18 } }
                visible: *label_visible_landuse_green
                draw:
                    icons:
                        sprite: college-university
                        visible: *icon_visible_landuse_green
                        interactive: true
                        priority: 11
                    text-blend-order:
                        visible: *text_visible_landuse_green
                        interactive: true
                        priority: 12
                        font:
                            weight: 600
                            fill: [0.20,0.20,0.20]
                            #size: 10px
                            # stroke: { color: *text_stroke, width: 4 }
                early:
                    filter: { $zoom: { max: 12 } }
                    draw: { text-blend-order: { visible: false } }
                early2:
                    filter: { $zoom: { min: 12, max: 14 } }
                    draw: { text-blend-order: { size: 11px } }
            landuse-labels-not-green-areas:
                filter:
                    all:
                        - $zoom: { min: 6 }
                        - area: true
                        - $geometry: point
                        - not: { kind: [park, national_park, "park or protected land",conservation, protected_area, nature_reserve, airport, aerodrome, university, college] }
                    any:
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [5,6,7], area: { min: 5000000000 } }
                        - { $zoom: [8],     area: { min: 1600000000 } }
                        - { $zoom: [9],     area: { min: 400000000 } }
                        - { $zoom: [10],    area: { min: 100000000 } }
                        - { $zoom: [11],    area: { min: 25000000 } }
                        - { $zoom: [12],    area: { min: 5000000 } }
                        - { $zoom: [13],    area: { min: 1000000 } }
                        - { $zoom: [14],    area: { min: 100000 } }
                        # show labels for smaller landuse areas at higher zooms
                        - { $zoom: [15],    area: { min: 5000 } }
                        - { $zoom: [16],    area: { min: 2000 } }
                        - { $zoom: { min: 17 } }
                draw:
                    icons:
                        sprite: function() { return feature.kind; }
                        sprite_default: generic
                        visible: *icon_visible_poi_landuse
                        interactive: true
                        priority: 13
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        interactive: true
                        priority: 14
                        font:
                            fill: [0.20,0.20,0.20] # *text_fill
#                            size: 10px
                            weight: 600
                            stroke: { color: *text_stroke, width: 4 }
                early-sizing:
                    filter: { $zoom: { max: 14 } }
                    draw: { text-blend-order: { size: 11px } }
                building-like:
                    filter: { kind: [commercial,residential,warehouse,public,dormitory], osm_relation: false }
                    draw:
                        icons:
                            sprite: building
#                residential-relations-paris-wtf:
#                    filter: { kind: [residential], osm_relation: true }
#                    draw:
#                        icons:
#                            text-blend-order: { visible: true, text_source: short_name, font: { fill: red } }
#                            icons: { sprite: park, visible: true }
                hide-till-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { max: 17 } }
                    draw:
                        text-blend-order: { visible: false }
                        icons: { visible: false }
                only-text-later:
                    filter: { kind: [pedestrian,common,railway,ship,houseboat,common,grass,wetland,pitch], $zoom: { min: 17 } }
                    draw:
                        text-blend-order: { font: { style: italic } }
                        icons: { visible: false }
            university-poi:
                filter: { kind: [university], area: false, $zoom: { max: 16 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            office-early:
                filter:
                    any:
                        - { kind: [insurance, office, company], $zoom: [15], area: { max: 10000 } }
                        - { kind: [insurance, office, company], $zoom: [16], area: { max: 5000 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            bank-early:
                filter: { kind: [bank], $zoom: { max: 17 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            post-office-early:
                filter: { kind: [post_office], $zoom: { max: 14 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            atm-early:
                filter: { kind: [atm], $zoom: { max: 18 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            memorial-early:
                filter: { kind: [memorial], $zoom: { max: 13 } }
                draw:
                    text-blend-order:  { visible: false }
                    icons: { visible: false }
            parking-labels-early:
                filter:
                    kind: [parking]
                    $zoom: { max: 18 }
                draw:
                    text-blend-order:
                        visible: false
                    icons:
                        visible: false
            parking-labels:
                filter:
                    kind: [parking]
                    $zoom: { min: 18 }
                draw:
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        interactive: true
                        font:
                            fill: [0.20,0.20,0.20] #*text_fill
                            size: 10px
                            stroke: { color: *text_stroke, width: 4 }
            landuse-funky:
                filter: { kind: [commercial, residential, wood], $zoom: { max: 17 } }
                draw:
                    text-blend-order:
                        visible: false
            car-sharing:
                filter: { kind: car_sharing }
                icons-early:
                    filter: { $zoom: { max: 17 } }
                    draw:
                        icons:
                            visible: false
                text-labels-early:
                    filter: { $zoom: { max: 19 } }
                    draw:
                        text-blend-order:
                            visible: false
            station-train-subway:
                filter: { kind: [station, train-station, train_station], $zoom: { min: 11 } }
                visible: *label_visible_station
                draw:
                    icons:
                        visible: *icon_visible_station
                        sprite: train-station
                        size: [[13, 12px], [14, 14px], [15, 16px], [17, 20px]]
                        priority: 11
                    text-blend-order:
                        visible: *text_visible_station
                        offset: [[13, [0, 6px]], [14, [0, 7px]],[15, [0, 8px]], [17, [0, 10px]]]
                        priority: 12
                low-priority-early:
                    filter: { kind_tile_rank: { min: 5 }, area: false, $zoom: { min: 0, max: 14 } }
                    draw:
                        icons:
                            visible: false
                            #size: [[12, 10px], [14, 10px], [15, 16px]]
                        text-blend-order: { visible: false }
                low-priority-early-z14:
                    filter: { kind_tile_rank: { min: 7 }, area: false, $zoom: { min: 14, max: 15 } }
                    draw:
                        icons:
                            size: [[12, 10px], [14, 11px], [15, 16px]]
                            #visible: false
                        text-blend-order: { visible: false }
            tram-stop-early:
                filter: { kind: tram_stop, $zoom: { max: 15 } }
                draw:
                    icons:
                        visible: false
            tram-stop-early-z15:
                filter: { kind: tram_stop, $zoom: [15] }
                draw:
                    text-blend-order:
                        visible: false
            tram-stop:
                filter: { kind: tram_stop, $zoom: { min: 15 } }
                draw:
                    icons:
                        size: [[13, 12px], [16, 18px]]
                    text-blend-order:
                        offset: [[13, [0, 6px]], [16, [0, 9px]]]
            bus-stop-bus-station-labels:
                filter:
                    kind: [bus_stop, bus_station]
                    $zoom: { min: 18 }
                draw:
                    text-blend-order:
                        visible: *text_visible_poi_landuse
                        interactive: true
                        font:
                            fill: [0.20,0.20,0.20] # *text_fill
                            size: 11px
                            stroke: { color: *text_stroke, width: 4 }
                bus_stop:
                    filter:
                        kind: [bus_stop]
                        $zoom: { max: 19 }
                    draw:
                        icons:
                            size: [[13, 8px], [19, 18px]]
                        text-blend-order:
                            visible: false

            icons:
                adult-boutique:
                    filter: { kind: [erotic, adult_boutique] }
                    draw:   { icons: { sprite: adult-boutique } }
                allotments:
                    filter: { kind: [allotments] }
                    draw:   { icons: { sprite: garden } }
                airport:
                    filter: { kind: [airport, aerodrome] }
                    draw:   { icons: { sprite: airport } }
                animal-shelter:
                    filter: { kind: [animal_shelter, animal-shelter, animal_boarding] }
                    draw:   { icons: { sprite: animal-shelter } }
                antique-shop:
                    filter: { kind: [antiques, antique-shop] }
                    draw:   { icons: { sprite: antique-shop } }
                art-gallery:
                    filter: { kind: [art_gallery, art-gallery, art] }
                    draw:   { icons: { sprite: art-gallery } }
                athletics-sports:
                    filter: { kind: [athletic_sports, recreation_ground, sports_centre] }
                    draw:   { icons: { sprite: athletics-sports } }
                automotive-shop:
                    filter: { kind: [car_repair, automotive-shop, automotive, tyres] }
                    draw:   { icons: { sprite: automotive-shop } }
                bakery:
                    filter: { kind: [bakery, pastry, chocolate] }
                    draw:   { icons: { sprite: bakery } }
                bar:
                    filter: { kind: [pub, bar] }
                    draw:   { icons: { sprite: bar } }
                beer-garden:
                    filter: { kind: [biergarten, beer-garden, brewery] }
                    draw:   { icons: { sprite: beer-garden } }
                bike-shop:
                    filter: { kind: [bicycle, bicycle_rental, bike, bike_shop] }
                    draw:   { icons: { sprite: bike-shop } }
                boat-ferry:
                    filter: { kind: [ferry_terminal, boat-ferry, ferry-boat, ferry] }
                    draw:   { icons: { sprite: boat-ferry } }
                boat-ramp:
                    filter: { kind: [slipway, boat-ramp, boat_ramp] }
                    draw:   { icons: { sprite: boat-ramp } }
                bookstore:
                    filter: { kind: [books, bookstore] }
                    draw:   { icons: { sprite: bookstore } }
                bowling-alley:
                    filter: { kind: [bowling_alley, bowling-alley] }
                    draw:   { icons: { sprite: bowling-alley } }
                bridal-shop:
                    filter: { kind: [bridal, bridal-shop] }
                    draw:   { icons: { sprite: bridal-shop } }
                building-icon:
                    filter: { kind: [building, auditorium, terminal, hangar, retirement_home, manor, recreation_center, apartments] }
                    draw:   { icons: { sprite: building } }
                    early:
                        filter:
                            any:
                                # show labels for smaller landuse areas at higher zooms
                                - { $zoom: [14], area: { max: 200000 } }
                                - { $zoom: [15], area: { max: 20000 } }
                                - { $zoom: [16], area: { max: 5000 } }
                                - { $zoom: [17], area: { max: 1000 } }
                        draw:
                            text-blend-order:
                                visible: false
                            icons:
                                visible: false
                burger:
                    filter: { kind: [fast_food, burger] }
                    draw:   { icons: { sprite: burger } }
                bus-station:
                    filter: { kind: [bus_stop, bus_station] }
                    draw:   { icons: { sprite: bus-station } }
                camera-store:
                    filter: { kind: [camera, camera-store, photo] }
                    draw:   { icons: { sprite: camera-store } }
                campground:
                    filter: { kind: [campground, camp_site, caravan_site] }
                    draw:   { icons: { sprite: campground } }
                candy-store:
                    filter: { kind: [candy, candy-store, confectionery] }
                    draw:   { icons: { sprite: candy-store } }
                car-dealership:
                    filter: { kind: [car, car-dealership] }
                    draw:   { icons: { sprite: car-dealership } }
                car-wash:
                    filter: { kind: [car_wash, car-wash] }
                    draw:   { icons: { sprite: car-wash } }
                castle:
                    filter: { kind: [castle, fort] }
                    draw:   { icons: { sprite: castle } }
                cemetery:
                    filter: { kind: [grave_yard, cemetery] }
                    draw:   { icons: { sprite: cemetery } }
                cheese-shop:
                    filter: { kind: [cheese, cheese-shop] }
                    draw:   { icons: { sprite: cheese-shop } }
                clothing-store:
                    filter: { kind: [clothes, chothing-store, "clothes store", fashion] }
                    draw:   { icons: { sprite: clothing-store } }
                coffee-shop:
                    filter: { kind: [cafe, coffee-shop] }
                    draw:   { icons: { sprite: coffee-shop } }
                college-university:
                    filter: { kind: [university, college, college-university], area: false }
                    draw:   { icons: { sprite: college-university } }
                concert-hall:
                    filter: { kind: [music_venue] }
                    draw:   { icons: { sprite: concert-hall } }
                convenience-store:
                    filter: { kind: [convenience, convenience-store, convenience_store, beverages] }
                    draw:   { icons: { sprite: convenience-store } }
                cosmetics-shop:
                    filter: { kind: [cosmetics, cosmetics-shop, beauty] }
                    draw:   { icons: { sprite: cosmetics-shop } }
                department-store:
                    filter: { kind: [department_store, department-store] }
                    draw:   { icons: { sprite: department-store } }
                dog-run:
                    filter: { kind: [dog_park, dog_run, dog-run] }
                    draw:   { icons: { sprite: dog-run } }
                dry-cleaning:
                    filter: { kind: [dry_cleaning] }
                    draw:   { icons: { sprite: dry-cleaning } }
                electronics-store:
                    filter: { kind: [electronics, electronics-store, computer] }
                    draw:   { icons: { sprite: electronics-store } }
                factory:
                    filter: { kind: [factory, industrial, chimney, sub_station, substation, wastewater_plant, works, water_works, plant, generator] }
                    draw:   { icons: { sprite: factory } }
                farmers-market:
                    filter: { kind: [farmers_market, farmers-market] }
                    draw:   { icons: { sprite: farmers-market } }
                fire-station:
                    filter: { kind: [fire_station, fire-station] }
                    draw:   { icons: { sprite: fire-station } }
                fish-market:
                    filter: { kind: [fish, fish-market, seafood, fishmonger] }
                    draw:   { icons: { sprite: fish-market } }
                fishing-spot:
                    filter: { kind: [fishing_spot, fishing-spot, fishing] }
                    draw:   { icons: { sprite: fishing-spot } }
                fitness:
                    filter: { kind: [gym, fitness, fitness_center] }
                    draw:   { icons: { sprite: fitness } }
                flea-market:
                    filter: { kind: [flea_market, flea-market] }
                    draw:   { icons: { sprite: flea-market } }
                flower-shop:
                    filter: { kind: [florist, flower-shop] }
                    draw:   { icons: { sprite: flower-shop } }
                forest:
                    filter: { kind: [forest, conservation, wood] }
                    draw:   { icons: { sprite: forest } }
                furniture-store:
                    filter: { kind: [furniture, furniture-store] }
                    draw:   { icons: { sprite: furniture-store } }
                garden-center:
                    filter: { kind: [garden_centre, garden_center] }
                    draw:   { icons: { sprite: garden-center } }
                gas-station:
                    filter: { kind: [fuel, gas-station] }
                    draw:   { icons: { sprite: gas-station } }
                general-entertainment:
                    filter: { kind: [ticket, general_entertainment] }
                    draw:   { icons: { sprite: general-entertainment } }
                generic:
                    filter: { kind: [generic] }
                    draw:   { icons: { sprite: generic } }
                gift-shop:
                    filter: { kind: [gift, gift-shop] }
                    draw:   { icons: { sprite: gift-shop } }
                golf-course:
                    filter: { kind: [golf-course, golf_course] }
                    draw:   { icons: { sprite: golf-course } }
                government-building:
                    filter: { kind: [townhall, public_building, embassy] }
                    draw:   { icons: { sprite: government-building } }
                grocery-store:
                    filter: { kind: [supermarket, grocery-store, health_food, greengrocer] }
                    draw:   { icons: { sprite: grocery-store } }
                harbor-marina:
                    filter: { kind: [marina, harbor, harbor-marina, harbor_marina, dock, mooring] }
                    draw:   { icons: { sprite: harbor-marina } }
                hardware-store:
                    filter: { kind: [hardware, hardware-store, doityourself, paint] }
                    draw:   { icons: { sprite: hardware-store } }
                hiking-trail:
                    filter: { kind: [trailhead, hiking_trail] }
                    draw:   { icons: { sprite: hiking-trail } }
                hotel:
                    filter: { kind: [hotel, motel, hostel] }
                    draw:   { icons: { sprite: hotel } }
                hunting-supply:
                    filter: { kind: [hunting, fishing] }
                    draw:   { icons: { sprite: hunting-supply } }
                ice-cream-shop:
                    filter: { kind: [ice_cream] }
                    draw:   { icons: { sprite: ice-cream-shop } }
                information:
                    filter: { kind: [info, information] }
                    draw:   { icons: { sprite: information } }
                jewelry-store:
                    filter: { kind: [jewelry, jewelry_store, jewelry-store] }
                    draw:   { icons: { sprite: jewelry-store } }
                landmark:
                    filter: { kind: [landmark, memorial, monument, wayside_shrine, beacon] }
                    draw:   { icons: { sprite: landmark } }
                tower:
                    filter: { kind: [tower], label_placement: false }
                    draw:   { icons: { sprite: landmark } }
                tower:
                    filter: { kind: [tower], label_placement: yes }
                    draw:   { icons: { visible: false }, text-blend-order: { font: { style: italic } } }
                laundry:
                    filter: { kind: [laundry] }
                    draw:   { icons: { sprite: laundry } }
                light-rail:
                    filter: { kind: [light-rail, light_rail, tram_stop] }
                    draw:   { icons: { sprite: light-rail } }
                liquor-store:
                    filter: { kind: [alcohol, liquor-store, liquor] }
                    draw:   { icons: { sprite: liquor-store } }
                market:
                    filter: { kind: [market, variety_store, boutique, dairy, retail] }
                    draw:   { icons: { sprite: market } }
                mine:
                    filter: { kind: [mind, quarry, mineshaft, adit] }
                    draw:   { icons: { sprite: mine } }
                miscellaneous-shop:
                    filter: { kind: [houseware, miscellaneous-shop] }
                    draw:   { icons: { sprite: miscellaneous-shop } }
                mobile-phone-shop:
                    filter: { kind: [mobile_phone] }
                    draw:   { icons: { sprite: mobile-phone-shop } }
                motorcycle-shop:
                    filter: { kind: [motorcycle, motorcycle_shop, motorcycle_repair] }
                    draw:   { icons: { sprite: motorcycle-shop } }
                mountain:
                    filter: { kind: [mountain, peak] }
                    draw:   { icons: { sprite: mountain } }
                movie-theatre:
                    filter: { kind: [cinema, movie-theatre, movie-theater] }
                    draw:   { icons: { sprite: movie-theatre } }
                museum:
                    filter: { kind: [museum, observatory] }
                    draw:   { icons: { sprite: museum } }
                music-store:
                    filter: { kind: [music, music-store, musical_instrument] }
                    draw:   { icons: { sprite: music-store } }
                newsstand:
                    filter: { kind: [kiosk, newsstand, newsagent] }
                    draw:   { icons: { sprite: newsstand } }
                nightlife:
                    filter: { kind: [nightclub, nightlife] }
                    draw:   { icons: { sprite: nightlife } }
                office:
                    filter: { kind: [insurance, office, company] }
                    draw:   { icons: { sprite: office } }
                office-supplies:
                    filter: { kind: [office_supplies, office-supplies, stationery] }
                    draw:   { icons: { sprite: office-supplies } }
                optical-shop:
                    filter: { kind: [optician, optical_shop, optical-shop] }
                    draw:   { icons: { sprite: optical-shop } }
                performing-arts:
                    filter: { kind: [theater, theatre, performing-arts] }
                    draw:   { icons: { sprite: performing-arts } }
                pet-store:
                    filter: { kind: [pet, pet-store, pet-service, pet_store] }
                    draw:   { icons: { sprite: pet-store } }
                pharmacy:
                    filter: { kind: [pharmacy, chemist] }
                    draw:   { icons: { sprite: pharmacy } }
                photography-lab:
                    filter: { kind: [photo_studio, photography_lab, photographer] }
                    draw:   { icons: { sprite: photography-lab } }
                picnic-spot:
                    filter: { kind: [picnic_site, picnic_spot, picnic-spot] }
                    draw:   { icons: { sprite: picnic-spot } }
                pool:
                    filter: { kind: [pool, swimming_pool, water_park] }
                    draw:   { icons: { sprite: pool } }
                pool-hall:
                    filter: { kind: [billiards, pool-hall] }
                    draw:   { icons: { sprite: pool-hall } }
                post-office:
                    filter: { kind: [post_office, post-office] }
                    draw:   { icons: { sprite: post-office } }
                power-pylon:
                    filter: { kind: [tower, power-pylon, pylon] }
                    draw:   { icons: { sprite: power-pylon } }
                real-estate:
                    filter: { kind: [estate_agent, real_estate] }
                    draw:   { icons: { sprite: real-estate } }
                recycling-facility:
                    filter: { kind: [recycling, recycling-facility] }
                    draw:   { icons: { sprite: recycling-facility } }
                rental-car:
                    filter: { kind: [rental-car, car_rental, car_sharing] }
                    draw:   { icons: { sprite: rental-car } }
                rest-area:
                    filter: { kind: [rest_area, rest-area] }
                    draw:   { icons: { sprite: rest-area } }
                restaurant:
                    filter: { kind: [restaurant, deli] }
                    draw:   { icons: { sprite: restaurant } }
                ruin:
                    filter: { kind: [ruins, archaeological_site] }
                    draw:   { icons: { sprite: ruin } }
                salon-barber:
                    filter: { kind: [hairdresser, salon-barber, salon, beauty_salon] }
                    draw:   { icons: { sprite: salon-barber } }
                school:
                    filter: { kind: [school, kindergarten] }
                    draw:   { icons: { sprite: school } }
                ship-wreck:
                    filter: { kind: [wreck] }
                    draw:   { icons: { sprite: ship-wreck } }
                shoe-store:
                    filter: { kind: [shoes, shoe-store, shoe_store] }
                    draw:   { icons: { sprite: shoe-store } }
                smoke-shop:
                    filter: { kind: [smoke_shop, tobacco] }
                    draw:   { icons: { sprite: smoke-shop } }
                spa-massage:
                    filter: { kind: [spa, spa-massage, sauna, massage] }
                    draw:   { icons: { sprite: spa-massage } }
                spiritual-center:
                    filter: { kind: [spiritual_center, spiritual-center, place_of_worship, wayside_chapel] }
                    draw:   { icons: { sprite: spiritual-center } }
                church:
                    filter: { kind: place_of_worship, religion: christian }
                    draw:   { icons: { sprite: church } }
                synagogue:
                    filter: { kind: place_of_worship, religion: jewish }
                    draw:   { icons: { sprite: synagogue } }
                buddhist:
                    filter: { kind: place_of_worship, religion: buddhist }
                    draw:   { icons: { sprite: buddhism } }
                mosque:
                    filter: { kind: place_of_worship, religion: muslim }
                    draw:   { icons: { sprite: mosque } }
                sporting-goods-shop:
                    filter: { kind: [sporting_goods, sporting-goods-shop, sports, outdoor] }
                    draw:   { icons: { sprite: sporting-goods-shop } }
                stable:
                    filter: { kind: [stable, horse_riding] }
                    draw:   { icons: { sprite: stable } }
                storage-facility:
                    filter: { kind: [storage, storage-facility] }
                    draw:   { icons: { sprite: storage-facility } }
                subway-entrance:
                    filter: { kind: [subway_entrance] }
                    draw:   { icons: { sprite: subway-entrance } }
                tailor-shop:
                    filter: { kind: [tailor, tailor-shop] }
                    draw:   { icons: { sprite: tailor-shop } }
                tattoo-parlor:
                    filter: { kind: [tattoo, tattoo_parlor, tattoo-parlor] }
                    draw:   { icons: { sprite: tattoo-parlor } }
                theme-park:
                    filter: { kind: [theme_park, theme-park, miniature_golf] }
                    draw:   { icons: { sprite: theme-park } }
                thrift-vintage-store:
                    filter: { kind: [thrift, thrift-vintage-store, second_hand] }
                    draw:   { icons: { sprite: thrift-vintage-store } }
                toll-booth:
                    filter: { kind: [toll_booth, checkpoint, border_control] }
                    draw:   { icons: { sprite: toll-booth } }
                toy-game-store:
                    filter: { kind: [toys, toy-game-store, baby_goods] }
                    draw:   { icons: { sprite: toy-game-store } }
                toilets:
                    filter: { kind: [toilets] }
                    draw:   { icons: { sprite: toilets } }
                veterinarian:
                    filter: { kind: [pet_care, veterinarian, veterinary] }
                    draw:   { icons: { sprite: veterinarian } }
                video-game-store:
                    filter: { kind: [video_games] }
                    draw:   { icons: { sprite: video-game-store } }
                video-store:
                    filter: { kind: [video, video_store] }
                    draw:   { icons: { sprite: video-store } }
                view-point:
                    filter: { kind: [viewpoint, view_point, view-point, vista] }
                    draw:   { icons: { sprite: view-point } }
                well:
                    filter: { kind: [well, water_well] }
                    draw:   { icons: { sprite: well } }
                wine-shop:
                    filter: { kind: [wine, wine-shop] }
                    draw:   { icons: { sprite: wine-shop } }
                winery:
                    filter: { kind: [winery, wine] }
                    draw:   { icons: { sprite: winery } }

    # todo: ocean and sea features are hiding in the places layer
    water-area-labels:
        data: { source: osm, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - not: { kind: [riverbank, dock, playa] }
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 5 },  area: { min: 10000000000 } }
                - { $zoom: { min: 6 },  area: { min: 5000000000 } }
                - { $zoom: { min: 7 },  area: { min: 400000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
            default-label-text-blend-order:
            draw:
                text-blend-order:
                    font:
                        fill: [0.314,0.591,0.640] #*text_fill_water
                        family: *text_font_family
                        style: italic
                        weight: 400
                        size: 12px
                        # stroke: { color: [0.878,0.929,0.980], width: 2 }
        lakes-z5:
            filter: { $zoom: [5] }
            draw:
                text-blend-order: { font: { size: 9px } }
        lakes-z6:
            filter: { $zoom: [6] }
            draw:
                text-blend-order: { font: { size: 11px } }
        lakes-z8:
            filter: { $zoom: [8] }
            draw:
                text-blend-order: { font: { size: 12px } }

    ocean-sea-labels:
        data: { source: osm, layer: places }
        visible: *text_visible_water_labels
        filter: { name: true, kind: [sea, ocean] }
        draw:
            text-blend-order:
                font:
                    fill: [0.314,0.591,0.640] #*text_fill_water
                    family: *text_font_family
                    weight: 400
                    size: 12px
                    transform: uppercase
        sea-early:
            filter: { $zoom: [3], kind: sea }
            draw: { text-blend-order: { visible: false } }
        ocean-spacer:
            filter: { kind: ocean }
            ocean-spacer-z1-z4:
                filter: { $zoom: { min: 1, max: 4 } }
                draw:
                    text-blend-order:
                        text_source: function() { return feature.name.split('').join(' ') }
                        text_wrap: false
            ocean-spacer-z4-up:
                filter: { $zoom: { min: 4 } }
                draw:
                    text-blend-order:
                        text_source: function() { return feature.name.split('').join('  ') }
                        text_wrap: false
        ocean-labels-z1:
            filter: { $zoom: [1] }
            draw:
                text-blend-order: { font: { size: 8px } }
        ocean-labels-z2:
            filter: { $zoom: [2] }
            draw:
                text-blend-order: { font: { size: 10px } }
        ocean-labels-z3:
            filter: { $zoom: [3] }
            draw:
                text-blend-order: { font: { size: 13px } }
        ocean-labels-z4-up:
            filter: { $zoom: { min: 4} }
            draw:
                text-blend-order: { font: { size: 16px } }

        sea-spacer:
            filter: { not: { kind: [ocean] }, $zoom: { min: 5 } }
            draw:
                text-blend-order:
                    text_source: function() { return feature.name.split('').join(' ') }
                    text_wrap: false

        sea-labels:
            filter: { not: { kind: [ocean] } }
            sea-labels-z4:
                    filter: { $zoom: [4] }
                    draw:
                        text-blend-order: { font: { size: 9px } }
            sea-labels-z5:
                    filter: { $zoom: [5] }
                    draw:
                        text-blend-order: { font: { size: 10px } }
            sea-labels-z6:
                    filter: { $zoom: [6] }
                    draw:
                        text-blend-order: { font: { size: 11px } }
            sea-labels-z7:
                    filter: { $zoom: [7] }
                    draw:
                        text-blend-order: { font: { size: 12px } }
            sea-labels-z8:
                    filter: { $zoom: { min: 8} }
                    draw:
                        text-blend-order: { font: { size: 14px } }

    playa-labels:
        data: { source: osm, layer: [water] }
        visible: *text_visible_water_labels
        filter:
            all:
                - name: true
                - $geometry: point
                - kind: playa
                - area: true
            any:
                # show labels for smaller landuse areas at higher zooms
                - { $zoom: { min: 7 },  area: { min: 1500000000 } }
                - { $zoom: { min: 8 },  area: { min: 200000000 } }
                - { $zoom: { min: 9 },  area: { min: 100000000 } }
                - { $zoom: { min: 10 }, area: { min: 100000000 } }
                - { $zoom: { min: 11 }, area: { min: 10000000 } }
                - { $zoom: { min: 12 }, area: { min: 2000000 } }
                - { $zoom: { min: 13 }, area: { min: 1000000 } }
                - { $zoom: { min: 14 }, area: { min: 500000 } }
                - { $zoom: { min: 15 }, area: { min: 100000 } }
                - { $zoom: { min: 15 }, area: { min: 50000 } }
                - { $zoom: { min: 16 }, area: { min: 20000 } }
                - { $zoom: { min: 17 } }
        draw:
            text-blend-order:
                font:
                    fill: grey
                    family: *text_font_family
                    style: italic
                    weight: 400
                    size: 12px
                    stroke: { color: *text_stroke_water, width: 3 }
        # debug only
#        icons:
#            size: [[13, 12px], [15, 18px]]
#            interactive: true
#            sprite: *townspot_sprite
    water-line-labels:
        data: { source: osm, layer: [water] }
        filter:
            all:
                - name: true
                - area: false
                - kind: [river,canal,stream,dam,ditch,drain]
                - $zoom: { min: 14 }
        draw:
            text-blend-order:
                font:
                    fill: [0.314,0.591,0.640]
                    family: *text_font_family
                    style: italic
                    weight: 400
                    size: 12px
        water-line-labels-z14:
            filter: { $zoom: [14] }
            draw:
                text-blend-order: { font: { size: 10px } }
        water-line-labels-z17:
            filter: { $zoom: [17] }
            draw:
                text-blend-order: { font: { size: 14px } }
        not-river-not-stream:
            filter: { kind: [canal,dam,ditch,drain], $zoom: { max: 16 } }
            draw:
                text-blend-order:
                    visible: false
        stream:
            filter: { kind: [stream], $zoom: { max: 17 } }
            draw:
                text-blend-order:
                    visible: false

    landuse:
        data: { source: osm }
        tier1:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 3 },  area: { min: 300000000 } }
                    - { $zoom: { min: 4 },  area: { min: 300000000 } }
                    - { $zoom: { min: 5 },  area: { min: 150000000 } }
                    - { $zoom: { min: 6 },  area: { min: 150000000 } }
                    - { $zoom: { min: 7 },  area: { min: 100000000 } }
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            national_park:
                filter: { kind: [national_park, "park or protected land"], not: { operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ] } }
                draw:
                    dots2:
                        color: [[4,[0.655,0.800,0.796]],[8,[0.588,0.780,0.773]]]
                        # todo: what is this?
                        order: 1
                        visible: true
                us_national_park:
                    # yosemite national park, death valley national park, grand canyon national park
                    filter: { operator: [ "United States National Park Service", "US National Park Service" ] }
                    draw:
                        dots2:
                            color: [[4,[0.525,0.765,0.686]],[9,[0.416,0.737,0.631]]]
                            visible: true
                            # color: [[4,[0.242,0.737,0.712]],[12,[0.224,0.682,0.659]]]
        tier2:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 4 },  area: { min: 1000000000 } }
                    - { $zoom: { min: 5 },  area: { min: 1000000000 } }
                    - { $zoom: { min: 6 },  area: { min: 150000000 } }
                    - { $zoom: { min: 7 },  area: { min: 100000000 } }
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            conservation:
                filter:
                    kind: [conservation, protected_area, nature_reserve]
                    $zoom: { min: 4 }
                draw:
                    dots2:
                        color: [0.420,0.808,0.698]
                        visible: true
                wilderness-areas:
                    filter: function() { return feature.name && feature.name.indexOf("Wilderness") > -1 }
                    draw:
                        dots2:
                            order: 10
                            color: [0.027,0.804,0.494]
                            visible: true

                national_forest_level_6:
                    filter: { protect_class: ["6",6] }
                    draw:
                        dots2:
                            color: [0.442,0.960,0.865] #*green7
                            visible: true

            # gotta be a protected area to draw green, not just a landcover type
            farm:
                filter:
                    kind: [farm, farmland]
                    $zoom: { min: 10}
                draw:
                    dots2:
                        color: [0.600,0.790,0.714]
                        visible: *green4_v
            forest:
                filter: { kind: [forest,wood], $zoom: { min: 6 } }
                national-forest:
                    filter:
                        operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ]
                    draw:
                        dots2:
                            color: *green7
                            visible: true

                landuse-forest:
                    filter:
                        not: { operator: [ "United States Forest Service", "US Forest Service", "U.S. Forest Service", "USDA Forest Service" ] }
                        $zoom: { min: 10 }
                    draw:
                        dots2:
                            color: [0.486,0.839,0.722]
                            visible: true

            nature_reserve:
                filter: { kind: nature_reserve, $zoom: { min: 7 } }
                draw:
                    dots2:
                        color: [0.596,0.788,0.624]
                        visible: true
                wilderness-areas:
                    filter: function() { return feature.name && feature.name.indexOf("Wilderness") > -1 }
                    draw:
                        dots2:
                            color: *green7
                            visible: true

            parks-and-national-forests-not-national-park:
                filter: { $zoom: { min: 4 }, kind: [park, national_park, "park or protected land"], not: { operator: [ "United States National Park Service", "US National Park Service" ] } }
                # default for national forests and more?
                draw:
                    dots2:
                        # color: [[4,[0.655,0.800,0.796]],[11,[0.588,0.780,0.773]],[12,[0.242,0.737,0.712]],[14,[0.412,0.733,0.718]],[15,[0.635,0.792,0.788]]]
                        color: [[4,[0.655,0.800,0.796]],[11,[0.588,0.780,0.773]],[12,[0.635,0.792,0.788]]]
                        order: function() { return feature.sort_key + 1 || 1; }
                        visible: true

            urban:
                filter: { kind: [urban, rural, residential] }
                visible: *earth2_v
                draw:
                    dots2:
                        color: [[0,*earth2],[9,*earth2]]
                        visible: *earth2_v
        tier3:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 8 },  area: { min: 10000000 } }
                    - { $zoom: { min: 9 },  area: { min: 5000000 } }
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            airport:
                filter:
                    kind: aerodrome
                draw:
                    dots2:
                        color: [0.805,0.805,0.825]
                        visible: *purple_v
            military:
                filter:
                    kind: military
                draw:
                    dots2:
                        color: [0.624,0.709,0.800]
                        visible: true
            university:
                filter:
                    kind: university
                draw:
                    dots2:
                        color: [0.827,0.753,0.682]
                        order: function() { return (feature.sort_key - 2) || 1; }
                        visible: true
        tier4:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 10 }, area: { min: 1000000 } }
                    - { $zoom: { min: 11 }, area: { min: 500000 } }
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            cemetery:
                filter:
                    kind: cemetery
                draw:
                    dots2:
                        order: 11
                        color: *green2
                        visible: true
            commercial:
                filter:
                    kind: commercial
                draw:
                    dots2:
                        color: [0.855,0.748,0.667]
                        visible: *grey1_v
            golf_course:
                filter:
                    kind: golf_course
                draw:
                    dots2:
                        order: 11
                        color: [0.353,0.812,0.545]
                        visible: true
            hospital:
                filter:
                    kind: hospital
                draw:
                    dots2:
                        color: [0.843,0.624,0.647]
                        visible: true
            industrial:
                filter:
                    kind: industrial
                draw:
                    dots-rev:
                        color: [[8,[0.845,0.845,0.845]],[14,[0.835,0.835,0.835]],[15,[0.780,0.780,0.780]]]
                        visible: true
            power:
                filter: { kind: [plant, generator, substation] }
                draw:
                    dots2:
                        color: [0.679,0.679,0.679]
                        visible: true
            railway:
                filter:
                    kind: railway
                draw:
                    dots-rev:
                        color: [0.898,0.910,0.918]
                        visible: true
            recreation_ground:
                filter:
                    kind: recreation_ground
                draw:
                    dots2:
                        color: *green1
                        visible: true
            retail:
                filter:
                    kind: retail
                draw:
                    dots2:
                        color: [0.955,0.752,0.650]
                        visible: *grey1_v
            stadium:
                filter:
                    kind: stadium
                draw:
                    dots2:
                        color: [0.624,0.690,0.761]
                        visible: true
            zoo:
                filter:
                    kind: zoo
                draw:
                    dots2:
                        color: [0.498,1.000,0.851]
                        visible: true
            man-made:
                filter: { kind: [pier,wastewater_plant,works,bridge,tower,breakwater,water_works,groyne,dike,cutline] }
                draw: { dots2: { order: 2, color: [0.690,0.690,0.690], visible: true } }
                pier:
                    filter: { kind: [pier,bridge,breakwater,groyne,dike,cutline] }
                    draw: { dots2: { order: 5, color: [0.679,0.679,0.679], visible: true } }
        tier5:
            filter:
                any:
                    # limit show smaller landuse areas to higher zooms
                    - { $zoom: { min: 12 }, area: { min: 500000 } }
                    - { $zoom: { min: 13 }, area: { min: 100000 } }
                    - { $zoom: { min: 14 }, area: { min: 50000 } }
                    - { $zoom: { min: 15 }, area: { min: 20000 } }
                    - { $zoom: { min: 15 }, area: { min: 2000 } }
                    - { $zoom: { min: 16 } }
            garden:
                filter:
                    kind: garden
                draw:
                    dots2:
                        color: [0.604,0.973,0.722]
                        order: 4
                        visible: true
            parking:
                filter:
                    all:
                        - kind: parking
                        - $zoom: { min: 14 }
                    any:
                        - { $zoom: { min: 14 }, area: { min: 10000 } }
                        - { $zoom: { min: 15 }, area: { min: 5000 } }
                draw:
                    dots2:
                        color: [0.765,0.765,0.765]
                        visible: *grey1_v
                early:
                    filter: { $zoom: { max: 15 } }
                    draw:
                        dots2:
                            color: *grey1_e
                            visible: true
            pedestrian:
                filter:
                    kind: [pedestrian,common]
                draw:
                    dots2:
                        color: [0.740,0.740,0.740]
                        visible: *grey1_v
            pitch:
                filter: { kind: pitch }
                draw:
                    dots2:
                        order: 7
                        color: [0.490,0.812,0.631]
                        visible: true
#                    outline:
#                        style: lines
#                        color: *green6
#                        width: [[14,0px],[15,1px],[16,1m]]
            place_of_worship:
                filter:
                    kind: place_of_worship
                draw:
                    dots2:
                        color: [0.910,0.972,1.000]
                        visible: *grey1_v
            playground:
                filter:
                    kind: playground
                draw:
                    dots-rev:
                        color: [0.584,0.843,0.792]
                        visible: true
            school:
                filter:
                    kind: school
                draw:
                    dots2:
                        color: [0.749,0.722,0.694]
                        visible: true
        z-order:
            draw:
                dots2:
                    order: function() { return feature.sort_key || 1; }
                    visible: false
                dots-rev:
                    order: function() { return feature.sort_key || 1; }
                    visible: false
                polygons:
                    order: function() { return feature.sort_key || 1; }

    landuse-not-filtered:
        data: { source: osm, layer: landuse }
        # runways and taxiways are also in the roads layer as lines
        # these ones are probably duplicate features, but have AREA (a good thing)
        runway:
            filter:
                kind: runway
            draw:
                polygons:
                    order: 10
                    color: [[10,[0.4,0.4,0.4]],[11,[0.50,0.50,0.50]],[12,[0.7,0.7,0.7]],[13,[0.75,0.75,0.75]],[14,[0.95,0.95,0.95]]]
        apron:
            filter:
                kind: apron
                $zoom: { min: 15}
            draw:
                dots-rev:
                    order: 3
                    color: [0.820,0.820,0.820]
                    visible: *grey1_v

    landuse_urban_area-early:
        data: { source: osm, layer: landuse }
        filter:
            # This is from Natural Earth and only shows up from zoom(0,9)
            kind: ['urban area']
        visible: *earth2_ev
        draw:
            dots2:
                order: 1
                color: [[4,[0.965,0.600,0.882]],[6,[0.965,0.600,0.882]],[7,[0.882,0.639,0.827]],[8,[0.757,0.729,0.753]]]


    debug:
        data: { source: osm }
        draw:
            flat_lines:
                width: 2px
                order: 100
                color: '#ff0000'
