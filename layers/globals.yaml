global:
    #ux/ui
    ux_language: false             # l10n language code, trusting OSM in v0.10 tiles, fixed in v1.0 tiles
    ux_language_fallback: false    # l10n language code, trusting OSM in v0.10 tiles, fixed in v1.0 tiles
    ux_language_text_source: |
        function() {
            // if a ux_langauge has been defined use that, else if there is feature name in the fallback_ux_language then use that, else use the feature's default name in the local language
            return (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature.name;
        }
    ux_language_text_source_short: |
        function() {
            return (global.ux_language && feature['name:short:'+global.ux_language]) || (global.ux_language_fallback && feature['name:short:'+global.ux_language_fallback]) || feature['name:short'];
        }
    ux_language_text_source_short_proxy_name: |
        function() {
            var name  = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            var short = (global.ux_language && feature['name:short:'+global.ux_language]) || (global.ux_language_fallback && feature['name:short:'+global.ux_language_fallback]) || feature['name:short'];
            return short ? name : '';
        }
    ux_language_text_source_abbreviation: |
        function() {
            var name  = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            var abbrev = (global.ux_language && feature['name:abbreviation:'+global.ux_language]) || (global.ux_language_fallback && feature['name:abbreviation:'+global.ux_language_fallback]) || feature['name:abbreviation'];
            return abbrev || name;
        }
    ux_language_text_source_iata: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            if(feature.iata) {
                if (name) {
                    return name + ' (' + feature.iata + ')';
                }
                else {
                    return feature.iata;
                }
            } else {
                return name;
            }
        }
    ux_language_text_source_ocean: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            return name.split('').join('  ');
        }
    ux_language_text_source_sea: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            return name.split('').join(' ');
        }
    ux_language_text_source_continent: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'] || '';
            return name.split('').join(' ');
        }
    ux_language_text_source_road_ref_and_name: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            if(feature.ref && name) {
                return (feature.ref + ' ' + name);
            } else {
                return name;
            }
        }
    ux_language_text_source_road_ref_and_name_short: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            if (feature.ref && (feature.ref.length < 6) && name) {
                return feature.ref + ' ' + name;
            } else {
                return name;
            }
        }
    ux_language_text_source_piste_advanced: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            return name ? ('◆ ' + name) : '◆';
        }
    ux_language_text_source_piste_expert: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            return name ? ('◆◆ ' + name) : '◆◆';
        }
    ux_language_text_source_building_and_address: |
        function() {
            var name = (global.ux_language && feature['name:'+global.ux_language]) || (global.ux_language_fallback && feature['name:'+global.ux_language_fallback]) || feature['name'];
            if (name && feature.addr_housenumber) {
                return name + '\n' + feature.addr_housenumber;
            } else {
                return name;
            }
        }

    # To facilitate data visualizations several recommended sort orders are provided
    #
    # Your classic raster map overlay.
    # Over all line and polygon features.
    # Under map labels (icons and text), under UI elements
    # (like routeline and search result pins).
    sdk_order_over_everything_but_text_0: 490
    sdk_order_over_everything_but_text_1: 491
    sdk_order_over_everything_but_text_2: 492
    sdk_order_over_everything_but_text_3: 493
    sdk_order_over_everything_but_text_4: 494
    sdk_order_over_everything_but_text_5: 495
    sdk_order_over_everything_but_text_6: 496
    sdk_order_over_everything_but_text_7: 497
    sdk_order_over_everything_but_text_8: 498
    sdk_order_over_everything_but_text_9: 499
    #
    # Your classic "underlay"
    # Under roads. Above borders, water, landuse, and earth.
    sdk_order_under_roads_0: 290
    sdk_order_under_roads_1: 291
    sdk_order_under_roads_2: 292
    sdk_order_under_roads_3: 293
    sdk_order_under_roads_4: 294
    sdk_order_under_roads_5: 295
    sdk_order_under_roads_6: 296
    sdk_order_under_roads_7: 297
    sdk_order_under_roads_8: 298
    sdk_order_under_roads_9: 299
    #
    # Under water.
    # Above earth and most landuse.
    sdk_order_under_water_0: 190
    sdk_order_under_water_1: 191
    sdk_order_under_water_2: 192
    sdk_order_under_water_3: 193
    sdk_order_under_water_4: 194
    sdk_order_under_water_5: 195
    sdk_order_under_water_6: 196
    sdk_order_under_water_7: 197
    sdk_order_under_water_8: 198
    sdk_order_under_water_9: 199
    #
    # Under everything.
    # Tip: disable earth layer.
    sdk_order_under_everything_0: 0
    sdk_order_under_everything_1: 1
    sdk_order_under_everything_2: 2
    sdk_order_under_everything_3: 3
    sdk_order_under_everything_4: 4
    sdk_order_under_everything_5: 5
    sdk_order_under_everything_6: 6
    sdk_order_under_everything_7: 7
    sdk_order_under_everything_8: 8
    sdk_order_under_everything_9: 9
    #
    # TRANSIT OVERLAY
    # should default to "auto", with SDK overriding it to true or false,
    # or app logic sets other booleans that triggers auto behavior later
    sdk_transit_overlay: true
    #
    # default order for basemap features
    feature_order: function() { return feature.sort_key; }
    #
    #label visibility
    text_visible_continent: true
    text_visible_admin: true
    text_visible_populated_places: true
    icon_visible_populated_places: true
    text_visible_neighbourhoods: true
    text_visible_neighbourhoods_e: true
    text_visible_building: true
    text_visible_address: true
    text_visible_water_labels: true
    text_visible_island: true
    label_visible_landuse_green: true
    icon_visible_landuse_green: true
    text_visible_landuse_green: true
    label_visible_poi_landuse: true
    icon_visible_poi_landuse: true
    text_visible_poi_landuse: true
    label_visible_poi_landuse_e: true
    icon_visible_poi_landuse_e: true
    text_visible_poi_landuse_e: true
    label_visible_station: true
    icon_visible_station: true
    text_visible_station: true
    text_visible_highway: true
    text_visible_highway_e: true
    text_visible_trunk_primary: true
    text_visible_trunk_primary_e2: true
    text_visible_trunk_primary_e: true
    text_visible_secondary: true
    text_visible_secondary_e: true
    text_visible_tertiary: true
    text_visible_tertiary_e: true
    text_visible_minor_road: true
    text_visible_minor_road_e: true
    text_visible_service_road: true
    text_visible_path: true
    text_visible_piste: true
    text_visible_steps: true
    text_visible_aerialway: true
    text_visible_airport_gate: true
    text_visible_shields: true
    text_visible_exits: true
    #
    #label styling
    text_fill: black                         # BLACK
    text_fill2: '#555'                       # WHITE
    text_fill_road_e: '#555'                 # WHITE
    text_fill_exits: [0.920,0.398,0.340]     # motorway junctions, highway_casing1
    text_fill_building: '#ccc'               # WHITE
    text_fill_address: '#aaa'                # HUH
    text_fill_water: '#4c89b5'               # blue
    text_fill_park: [0.35,0.35,0.35]         # black
    text_fill_beach: [0.35,0.35,0.35]        # black
    text_fill_piste: '#444'                  # dark gray
    text_fill_piste_e: '#666'                # dark gray early
    text_fill_shield: white                  # road shield fill color
    text_stroke: [0.870,0.870,0.870]         # land color
    text_stroke_water: [0.9, 0.9, 0.9]       # water stroke color
    text_stroke_park: '#bddec5'              # park stroke color
    text_stroke_building: [0.83, 0.83, 0.83] # building stroke color
    text_stroke_address:  [0.85, 0.85, 0.85] # address stroke color
    text_stroke_road1: [0.9, 0.9, 0.9]       # road stroke color highway
    text_stroke_road2: [0.9, 0.9, 0.9]       # road stroke color major road
    text_stroke_road3: [0.9, 0.9, 0.9]       # road stroke color major road route
    text_stroke_road4: [0.9, 0.9, 0.9]       # road stroke color minor road
    text_stroke_shield: '#D16768'            # road shield stroke color &highway_casing1
    townspot_sprite: townspot-m-rev          # depends on land color and text settings
    text_font_family: 'Open Sans'            # branding in asperational Unicode, yo (or Helvetica)
    #
    #roads
    highway1: [0.988,0.495,0.439]
    highway1_e: [0.988,0.495,0.439]
    highway_link1: [1.000,0.631,0.590]
    highway_casing1: [0.859,0.859,0.859]
    highway_tunnel1: [0.800,0.800,0.800]
    highway_tunnel_casing1: [0.870,0.870,0.870]
    highway_link_tunnel_casing1: [0.8, 0.8, 0.7]
    ferry1: '#8bb5e4'
    rail1: '#999'
    rail1_e: '#bbb'
    rail2: '#777'                           # less important rail (service, sidings)
    major_road1: [1, 1, 1]
    major_road1b: [1.0,1.0,1.0]
    major_road1c: white                     #15%
    major_road2: [1.0,1.0,1.0]
    major_road2a: [1.0,1.0,1.0]
    major_road2b: [1.0,1.0,1.0]
    major_road3: [1.0,1.0,1.0]
    major_road4: white
    major_road5: white
    major_casing1: [0.859,0.859,0.859]      # same as highway_casing1
    major_casing2: [0.859,0.859,0.859]      # zoomed out
    major_tunnel1: [.870,0.870,0.870]       # light orange (major_route1)
    major_tunnel_casing1: [0.780,0.780,0.780]
    major_route1: [1.000,0.631,0.590]
    major_route2: [1.000,0.752,0.730]       # zoomed out
    minor_route: [1.000,0.631,0.590]        # same as major_route
    minor_road1: [0.9,0.9,0.9]              # natural earth
    minor_road2: [0.9,0.9,0.9]              # natural earth, same as major_road2
    minor_road3: [0.9,0.9,0.9]
    minor_road4: [0.9,0.9,0.9]              # zoomed out
    minor_road5: [0.9,0.9,0.9]              # zoomed out, again
    minor_casing1: white                    # same as highway_casing1
    minor_casing2: white                    # zoomed out
    minor_tunnel1: [0.8, 0.8, 0.7]
    minor_tunnel_casing1: white
    service_road1: white
    service_road2: white
    service_road_casing1: [0.770,0.770,0.770]
    service_road_casing2: white
    path1: [0.91,0.91,0.91]
    path2: [0.91,0.91,0.91]                 # zoomed out
    path_casing1: [0.875,0.875,0.875]
    path_bridge_casing1: [0.870,0.870,0.870]
    path_bridge_casing2: [0.870,0.870,0.870] # zoomed out
    path_steps1: [0.91,0.91,0.91]
    path_steps1_b: '#f0ebeb'
    piste_easy: [0.367,0.750,0.622]
    piste_intermediate: [0.420,0.678,0.863]
    piste_advanced: [0.450,0.450,0.450]
    piste_expert: [0.450,0.450,0.450]
    #
    #boundaries
    country_boundary: [1.0,1.0,1.0]
    region_boundary: [1.0,1.0,1.0]
    subregion_boundary: '#bbb'
    city_wall: [0.682,0.682,0.682]
    retaining_wall: [0.827,0.808,0.780]
    snow_fence: [0.827,0.808,0.780]
    fence: [0.827,0.808,0.780]
    #
    #landuse
    scene1: '#eee'                          # map background, water
    water1: [0.83, 0.83, 0.83]              # water
    water2: [.75,.75,.75]                   # playa
    water1_o: '#9dc3de'                     # water stroke
    water2_o: '#9dc3de'                     # water stroke 2
    earth1: '#666'                          # land color
    earth1_r: '#666'                        # land color road
    earth2: '#e9e4e0'                       # urban
    earth2_v: false                         # urban
    earth2_e: '#b3b3b3'                     # urban early
    earth2_e2: '#b3b3b3'                    # urban early fade in
    earth2_e3: '#bbbbbb'                    # urban early fade in 3
    earth2_ev: true                         # urban early visibility
    green1: [0.140,0.843,0.824]             # park
    green1_r: [0.140,0.843,0.824]           # roads in parks
    green1_b: '#94d8d6'                     # buildings in parks
    green1_bo: '#7fc3c1'                    # buildings in parks, outlines
    green1_w: '#b7d7bf'                     # wilderness area
    green1_ws: '#aed0b6'                    # wilderness area stroke
    green1b: [0.80,0.80,0.80]               # park
    green2: [0.547,0.760,0.590]             # cemetery
    green2_r: [0.7,0.7,0.7]                 # cemetery road
    green3: [0.000,0.779,0.328]             # golf course
    green4: '#526054'                       # farm faint
    green4_v: false                         # farm faint
    green5: '#5a695c'                       # farm
    green6: '#648560'                       # nature reserve
    green7: [0.169,0.651,0.631]             # forest
    green8: [0.123,0.770,0.587]             # conservation
    green9: '#cfe3d4'                       # forest (landcover)
    green9_e: '#cfe3d4'                     # forest (landcover) early
    green9_v: true                          # forest (landcover) visibility
    green10: '#c7d4c0'                      # sports_centre
    green11: '#d8ddd0'                      # minor zoo related AOIs
    green11_o: '#aec7b5'                    # minor zoo related AOIs outline
    orange1: '#bfb08e'                      # stadium
    orange2: '#d8ccb0'                      # pitch (play field)
    orange3: '#b9a597'                      # racetrack (play field)
    brown1: [0.814,0.692,0.570]             # university
    brown1_r: [0.814,0.692,0.570]           # roads in university
    brown1_b: [.65, .65, .65]               # university buildings
    brown1_bo: [.8, .8, .8]                 # university building outlines
    brown2: '#ada497'                       # school
    brown3: '#c7b7a2'                       # playground
    red1: [0.840,0.503,0.541]               # hospital
    red1_r: [0.840,0.503,0.541]             # roads in hospital
    red1_b: [.65, .65, .65]                 # hospital buildings
    red1_bo: [.8, .8, .8]                   # hospital building outlines
    grey1: '#717171'                        # pedestrian, retail, airport apron, parking, church
    grey1_e: '#cac6c4'                      # pedestrian, retail, airport apron, parking, church early zoom 14
    grey1_v: true                           # pedestrian, retail, airport apron, parking, church
    grey2: [0.5, 0.5, 0.5]                  # airport runway
    grey3: grey                             # railway
    grey4: '#ffc52a'                        # airport taxiway
    grey5: '#ffc52a'                        # airport taxiway
    grey6: '#c6c6c6'                        # industrial
    grey6_b: [.65, .65, .65]                # industrial buildings
    grey6_bo: [.8, .8, .8]                  # industrial building outlines
    grey7: '#ecebe9'                        # pedestrian, match minor road / path color
    grey7_v: true                           # pedestrian visibility
    grey8: '#ecebe9'                        # winter sports
    grey8_v: true                           # winter sports visibility
    grey9: [.7, .0, .0, 0.5]                # [.7, .7, .7]        # transit platform
    grey9_o: [.5, .5, .5]                   # transit platform outline
    grey9_v: true                           # transit platform visibility
    grey10: '#d4cce6'                       # generic major landuse (theme park, resort, aquarium, winery)
    grey10_o: '#bcb9c5'                     # generic major landuse outline
    grey11: '#d7d7d7'                       # generic minor landuse (attraction, artwork)
    grey11_o: '#cccccc'                     # generic minor landuse outline
    grey12: '#cfcfcf'                       # generic minor amusements (roller coasters, rides, slide, carousel)
    grey12_o: '#c5c5c5'                     # generic minor amusements
    purple: '#f0e1e1'                       # airport
    purple_v: false                         # airport
    purple_b: '#c2c3c4'                     # airport buildings
    purple_bo: '#969798'                    # airport buildings outline
    mystry1: '#bfb08e'                      # recreation ground
    yellow1: '#e7eda8'                      # beach
    building1: [0.784, 0.784, 0.784]        # building
    building2: [.860, .860, .860]           # building stroke
    building_o:  5                          # building stroke order
    building_e: true                        # building stroke order